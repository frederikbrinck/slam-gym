This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) (preloaded format=mex 2015.3.10)  7 MAY 2017 11:31
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**gpc.c gpc_mexfile.c -O -output PolygonClip
(./gpc.c
This is MeX  Version 1.05  18 XII 1993  (B. Jackowski & M. Ry\'cko)

Overfull \hbox (145.80237pt too wide) in paragraph at lines 1--3
[]\tenrm /* ===================================================================
======== |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm =
.etc.


Overfull \hbox (133.58012pt too wide) in paragraph at lines 30--32
[]\tenrm ======================================================================
=====|

\hbox(3.66875+0.0)x469.75499
.\hbox(0.0+0.0)x20.0
.\tenrm =
.\tenrm =
.\tenrm =
.\tenrm =
.etc.


Overfull \hbox (145.80237pt too wide) in paragraph at lines 33--38
[]\tenrm /* ===================================================================
========|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm =
.etc.


Overfull \hbox (151.69128pt too wide) in paragraph at lines 33--38
\tenrm In-c-lu-des ============================================================
===============|

\hbox(6.88889+0.0)x469.75499, glue set - 1.0
.\tenrm I
.\tenrm n
.\discretionary
..\tenrm -
.\tenrm c
.\discretionary
..\tenrm -
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.39 #
      include "gpc.h"
? q
OK, entering \batchmode...
! You can't use `macro parameter character #' in horizontal mode.
l.40 #
      include <stdlib.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.41 #
      include <float.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.42 #
      include <math.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.43 #
      include <stdio.h>
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


Overfull \hbox (145.80237pt too wide) in paragraph at lines 46--51
[]\tenrm /* ===================================================================
========|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm =
.etc.


Overfull \hbox (159.52464pt too wide) in paragraph at lines 46--51
\tenrm Con-stants =============================================================
==============|

\hbox(6.88889+0.0)x469.75499, glue set - 1.0
.\tenrm C
.\tenrm o
.\tenrm n
.\discretionary
..\tenrm -
.\tenrm s
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.52 #
      ifndef TRUE
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.53 #
      define FALSE              0
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.54 #
      define TRUE               1
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.55 #
      endif
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.57 #
      define LEFT               0
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.58 #
      define RIGHT              1
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.60 #
      define ABOVE              0
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.61 #
      define BELOW              1
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.63 #
      define CLIP               0
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.64 #
      define SUBJ               1
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.66 #
      define INVERT_TRISTRIPS   FALSE
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.66 #define INVERT_
                    TRISTRIPS   FALSE
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.67 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (145.80237pt too wide) in paragraph at lines 69--74
[]\tenrm /* ===================================================================
========|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm =
.etc.


Overfull \hbox (147.27461pt too wide) in paragraph at lines 69--74
\tenrm Ma-cros ================================================================
===========|

\hbox(6.88889+0.0)x469.75499, glue set - 1.0
.\tenrm M
.\tenrm a
.\discretionary
..\tenrm -
.\tenrm c
.\tenrm r
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.75 #
      define EQ(a, b)           (fabs((a) - (b)) <= GPC_EPSILON)
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.75 ...Q(a, b)           (fabs((a) - (b)) <= GPC_
                                                  EPSILON)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.76 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in vertical mode.
l.77 #
      define PREV_INDEX(i, n)   ((i - 1 + n) % n)
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.77 #define PREV_
                  INDEX(i, n)   ((i - 1 + n) % n)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in math mode.
l.78 #
      define NEXT_INDEX(i, n)   ((i + 1    ) % n)
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.79 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in vertical mode.
l.80 #
      define OPTIMAL(v, i, n)   ((v[PREV_INDEX(i, n)].y != v[i].y) || \
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.80 #define OPTIMAL(v, i, n)   ((v[PREV_
                                         INDEX(i, n)].y != v[i].y) || \
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.82 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in vertical mode.
l.83 #
      define FWD_MIN(v, i, n)   ((v[PREV_INDEX(i, n)].vertex.y >= v[i].verte...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.83 #define FWD_
                 MIN(v, i, n)   ((v[PREV_INDEX(i, n)].vertex.y >= v[i].verte...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.84                          &
                               & (v[NEXT_INDEX(i, n)].vertex.y > v[i].vertex...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.84                          &&
                                 (v[NEXT_INDEX(i, n)].vertex.y > v[i].vertex...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.85 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (43.70038pt too wide) in paragraph at lines 83--85
[]\tenrm define FWD$[]\teni IN\tenrm (\teni v; i; n\tenrm )((\teni v\tenrm [\te
ni PREV[]NDEX\tenrm (\teni i; n\tenrm )]\teni :vertex:y >\tenrm = \teni v\tenrm
 [\teni i\tenrm ]\teni :vertex:y\tenrm ) (\teni v\tenrm [\teni NEXT[]NDEX\tenrm
 (\teni i; n\tenrm )]\teni :vertex:y >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm d
.\tenrm e
.\tenrm ^^L (ligature fi)
.\tenrm n
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.86 #
      define NOT_FMAX(v, i, n)   (v[NEXT_INDEX(i, n)].vertex.y > v[i].vertex.y)
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.86 #define NOT_
                 FMAX(v, i, n)   (v[NEXT_INDEX(i, n)].vertex.y > v[i].vertex.y)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.87 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in vertical mode.
l.88 #
      define REV_MIN(v, i, n)   ((v[PREV_INDEX(i, n)].vertex.y > v[i].vertex...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.88 #define REV_
                 MIN(v, i, n)   ((v[PREV_INDEX(i, n)].vertex.y > v[i].vertex...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.89                          &
                               & (v[NEXT_INDEX(i, n)].vertex.y >= v[i].verte...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.89                          &&
                                 (v[NEXT_INDEX(i, n)].vertex.y >= v[i].verte...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.90 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (40.92258pt too wide) in paragraph at lines 88--90
[]\tenrm define REV$[]\teni IN\tenrm (\teni v; i; n\tenrm )((\teni v\tenrm [\te
ni PREV[]NDEX\tenrm (\teni i; n\tenrm )]\teni :vertex:y > v\tenrm [\teni i\tenr
m ]\teni :vertex:y\tenrm ) (\teni v\tenrm [\teni NEXT[]NDEX\tenrm (\teni i; n\t
enrm )]\teni :vertex:y >\tenrm =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm d
.\tenrm e
.\tenrm ^^L (ligature fi)
.\tenrm n
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.91 #
      define NOT_RMAX(v, i, n)   (v[PREV_INDEX(i, n)].vertex.y > v[i].vertex.y)
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.91 #define NOT_
                 RMAX(v, i, n)   (v[PREV_INDEX(i, n)].vertex.y > v[i].vertex.y)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.92 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in vertical mode.
l.93 #
      define VERTEX(e,p,s,x,y)  {add_vertex(&((e)->outp[(p)]->v[(s)]), x, y); \
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.93 #define VERTEX(e,p,s,x,y)  {add_
                                     vertex(&((e)->outp[(p)]->v[(s)]), x, y); \
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.93 #define VERTEX(e,p,s,x,y)  {add_vertex(&
                                             ((e)->outp[(p)]->v[(s)]), x, y); \
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.94 ...                (e)->outp[(p)]->active++;}
                                                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.95 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in vertical mode.
l.96 #
      define P_EDGE(d,e,p,i,j)  {(d)= (e); \
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.96 #define P_
               EDGE(d,e,p,i,j)  {(d)= (e); \
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.99 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (155.17513pt too wide) in paragraph at lines 96--99
[]\tenrm define P$[]\teni DGE\tenrm (\teni d; e; p; i; j\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm d
.\tenrm e
.\tenrm ^^L (ligature fi)
.\tenrm n
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.100 #
       define N_EDGE(d,e,p,i,j)  {(d)= (e); \
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.100 #define N_
                EDGE(d,e,p,i,j)  {(d)= (e); \
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.103 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (156.17168pt too wide) in paragraph at lines 100--103
[]\tenrm define N$[]\teni DGE\tenrm (\teni d; e; p; i; j\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm d
.\tenrm e
.\tenrm ^^L (ligature fi)
.\tenrm n
.etc.

! You can't use `macro parameter character #' in vertical mode.
l.104 #
       define MALLOC(p, b, s, t) {if ((b) > 0) { \
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.109 #
       define FREE(p)            {if (p) {free(p); (p)= NULL;}}
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


Overfull \hbox (145.80237pt too wide) in paragraph at lines 112--117
[]\tenrm /* ===================================================================
========|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm =
.etc.


Overfull \hbox (199.77472pt too wide) in paragraph at lines 112--117
\tenrm Pri-vate Data Ty-pes ===================================================
========================|

\hbox(6.88889+1.94444)x469.75499, glue set - 1.0
.\tenrm P
.\tenrm r
.\tenrm i
.\discretionary
..\tenrm -
.\tenrm v
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.136 } vertex_
               type;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.137 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

 [1]
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.143 } h_
          state;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.144 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.148   BUNDLE_
               HEAD,                      /* Bundle head node               ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.150 }
        bundle_state;
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.151 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.152 typedef struct v_
                       shape              /* Internal vertex list datatype  ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.158 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (411.39252pt too wide) in paragraph at lines 152--158
[]\tenrm typedef struct v$[]\teni hape= \tensy ^^C \teni Internalvertexlistdata
type \tensy ^^C \teni =[]vertex[]ode\tenrm ;$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm t
.\kern-0.27779
.\tenrm y
.\tenrm p
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.159 typedef struct p_
                       shape              /* Internal contour / tristrip typ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.167 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (952.14238pt too wide) in paragraph at lines 159--167
[]\tenrm typedef struct p$[]\teni hape= \tensy ^^C \teni Internalcontour=tristr
iptype \tensy ^^C \teni =[]polygon[]ode\tenrm ;$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm t
.\kern-0.27779
.\tenrm y
.\tenrm p
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.168 typedef struct edge_
                          shape
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.187 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (3226.42581pt too wide) in paragraph at lines 168--187
[]\tenrm typedef struct edge$[]\teni hape[]edge[]ode\tenrm ;$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm t
.\kern-0.27779
.\tenrm y
.\tenrm p
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.188 typedef struct lmt_
                         shape            /* Local minima table             ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.194 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (463.18385pt too wide) in paragraph at lines 188--194
[]\tenrm typedef struct lmt$[]\teni hape= \tensy ^^C \teni Localminimatable \te
nsy ^^C \teni =[]lmt[]ode\tenrm ;$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm t
.\kern-0.27779
.\tenrm y
.\tenrm p
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.195 typedef struct sbt_
                         t_shape          /* Scanbeam tree                  ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Double subscript.
l.195 typedef struct sbt_t_
                           shape          /* Scanbeam tree                  ...
I treat `x_1_2' essentially like `x_1{}_2'.

! Double subscript.
l.198   struct sbt_t_
                     shape *less;         /* Pointer to nodes with lower y  ...
I treat `x_1_2' essentially like `x_1{}_2'.

! Double subscript.
l.199   struct sbt_t_
                     shape *more;         /* Pointer to nodes with higher y ...
I treat `x_1_2' essentially like `x_1{}_2'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.201 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (433.8408pt too wide) in paragraph at lines 195--201
[]\tenrm typedef struct sbt$[][]\teni hape= \tensy ^^C \teni Scanbeamtree \tens
y ^^C \teni =[]sb[]ree\tenrm ;$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm t
.\kern-0.27779
.\tenrm y
.\tenrm p
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.202 typedef struct it_
                        shape             /* Intersection table             ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.208 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (448.00542pt too wide) in paragraph at lines 202--208
[]\tenrm typedef struct it$[]\teni hape= \tensy ^^C \teni Intersectiontable \te
nsy ^^C \teni =[]it[]ode\tenrm ;$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm t
.\kern-0.27779
.\tenrm y
.\tenrm p
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.209 typedef struct st_
                        shape             /* Sorted edge table              ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.217 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (777.02196pt too wide) in paragraph at lines 209--217
[]\tenrm typedef struct st$[]\teni hape= \tensy ^^C \teni Sortededgetable \tens
y ^^C \teni =[]st[]ode\tenrm ;$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm t
.\kern-0.27779
.\tenrm y
.\tenrm p
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.218 typedef struct bbox_
                          shape           /* Contour axis-aligned bounding b...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.225 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (597.80322pt too wide) in paragraph at lines 218--225
[]\tenrm typedef struct bbox$[]\teni hape= \tensy ^^C \teni Contouraxis \tensy 
^^@ \teni alignedboundingbox \tensy ^^C \teni =[]bbox\tenrm ;$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm t
.\kern-0.27779
.\tenrm y
.\tenrm p
.etc.


Overfull \hbox (145.80237pt too wide) in paragraph at lines 227--232
[]\tenrm /* ===================================================================
========|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm =
.etc.


Overfull \hbox (168.51079pt too wide) in paragraph at lines 227--232
\tenrm Glo-bal Data ===========================================================
================|

\hbox(6.88889+0.0)x469.75499, glue set - 1.0
.\tenrm G
.\tenrm l
.\tenrm o
.\discretionary
..\tenrm -
.\tenrm b
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.234 const h_
              state next_h_state[3][6]=
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Double subscript.
l.234 const h_state next_h_
                           state[3][6]=
I treat `x_1_2' essentially like `x_1{}_2'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.242 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (274.66223pt too wide) in paragraph at lines 233--242
[]\tenrm ;$ |

\hbox(7.5+2.5)x469.75499
.\hbox(7.5+2.5)x741.63943
..\teni =
..\glue(\medmuskip) 2.22217 plus 1.11108 minus 2.22217
..\tensy ^^C
..\glue(\medmuskip) 2.22217 plus 1.11108 minus 2.22217
..\teni A
..etc.
.\tenrm ;
.\mathoff
.\penalty 10000
.\glue(\parfillskip) 0.0 plus 1.0fil
.etc.


Overfull \hbox (145.80237pt too wide) in paragraph at lines 243--248
[]\tenrm /* ===================================================================
========|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm =
.etc.


Overfull \hbox (191.99695pt too wide) in paragraph at lines 243--248
\tenrm Pri-vate Func-tions ====================================================
=======================|

\hbox(6.88889+0.0)x469.75499, glue set - 1.0
.\tenrm P
.\tenrm r
.\tenrm i
.\discretionary
..\tenrm -
.\tenrm v
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.249 static void reset_
                        it(it_node **it)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.252 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.252 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.262 static void reset_
                        lmt(lmt_node **lmt)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.265 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.265 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.275 static void insert_
                         bound(edge_node **b, edge_node *e)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.278 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.278 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.290       existing_
                     bound= *b;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.293     }
           
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.309           insert_bound(&
                              ((*b)->next_bound), e);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.315         insert_bound(&
                            ((*b)->next_bound), e);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.318   }
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.319 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.320 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (1078.68753pt too wide) in paragraph at lines 279--320
\teni existing[]ound\tenrm ; \teni else[]$ |

\hbox(7.5+2.5)x469.75499
.\teni e
.\teni x
.\teni i
.\teni s
.\teni t
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.322 static edge_
                  node **bound_list(lmt_node **lmt, double y)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.325 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.325 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.329     MALLOC(*lmt, sizeof(lmt_
                                  node), "LMT insertion", lmt_node);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.333     return &
                  ((*lmt)->first_bound);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.334   }
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.344       return &
                    ((*lmt)->first_bound);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.349         return bound_list(&
                                 ((*lmt)->next), y);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.352         return &
                      ((*lmt)->first_bound);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.353 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.354 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (99.59122pt too wide) in paragraph at lines 326--354
[]\tenrm if (!*lmt)  /* Add node onto the tail end of the LMT */ MAL-LOC(*lmt, 
sizeof(lmt$[]\teni ode\tenrm )\teni ; \tenrm "\teni LMTinsertion\tenrm "\teni ;
 lmt[]ode\tenrm ); (\tensy ^^C\teni lmt\tenrm )\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.


Overfull \hbox (8.47775pt too wide) in paragraph at lines 326--354
\teni y \tenrm = \teni y\tenrm ; (\tensy ^^C\teni lmt\tenrm )\tensy ^^@ \teni >
 first[]ound \tenrm = \teni NULL\tenrm ; (\tensy ^^C\teni lmt\tenrm )\tensy ^^@
 \teni > next \tenrm = \teni NULL\tenrm ; \teni return\tenrm ((\tensy ^^C\teni 
lmt\tenrm )\tensy ^^@ \teni > first[]ound\tenrm ); \teni elseif\tenrm (\teni y 
<|

\hbox(7.5+2.5)x469.75499
.\teni y
.\kern0.35878
.\glue(\thickmuskip) 2.77771 plus 2.77771
.\tenrm =
.\penalty 500
.etc.


Overfull \hbox (738.16707pt too wide) in paragraph at lines 326--354
\tenrm (\tensy ^^C\teni lmt\tenrm )\tensy ^^@ \teni > y\tenrm )[]\teni elseif\t
enrm (\teni y >|

\hbox(7.5+2.5)x469.75499
.\tenrm (
.\tensy ^^C
.\teni l
.\kern0.19678
.\teni m
.etc.


Overfull \hbox (35.16895pt too wide) in paragraph at lines 326--354
\tenrm (\tensy ^^C\teni lmt\tenrm )\tensy ^^@ \teni > y\tenrm )\teni = \tensy ^
^C \teni HeadfurtheruptheLMT \tensy ^^C \teni =returnbound[]ist\tenrm (((\tensy
 ^^C\teni lmt\tenrm )\tensy ^^@ \teni > next\tenrm )\teni ; y\tenrm ); \teni el
se= \tensy ^^C \teni UsethisexistingLMTnode \tensy ^^C|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm (
.\tensy ^^C
.\teni l
.\kern0.19678
.\teni m
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.356 static void add_
                      to_sbtree(int *entries, sb_tree **sbtree, double y)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.372       add_to_sbtree(entries, &
                                    ((*sbtree)->less), y);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.379         add_to_sbtree(entries, &
                                      ((*sbtree)->more), y);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.384 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (1655.88138pt too wide) in paragraph at lines 356--384
[]\tenrm static void add$[]\teni o[]btree\tenrm (\teni int \tensy ^^C \teni ent
ries; sb[]ree \tensy ^^C ^^C\teni sbtree; doubley\tenrm )[]$ |

\hbox(7.51782+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm t
.\tenrm a
.\tenrm t
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.386 static void build_
                        sbt(int *entries, double *sbt, sb_tree *sbtree)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.395 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (500.28848pt too wide) in paragraph at lines 386--395
[]\tenrm static void build$[]\teni bt\tenrm (\teni int \tensy ^^C \teni entries
; double \tensy ^^C \teni sbt; sb[]ree \tensy ^^C \teni sbtree\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm t
.\tenrm a
.\tenrm t
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.397 static void free_
                       sbtree(sb_tree **sbtree)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.401     free_sbtree(&
                       ((*sbtree)->less));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.402     free_sbtree(&
                       ((*sbtree)->more));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.406 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (126.8739pt too wide) in paragraph at lines 397--406
[]\tenrm static void free$[]\teni btree\tenrm (\teni sb[]ree \tensy ^^C ^^C\ten
i sbtree\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm t
.\tenrm a
.\tenrm t
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.408 static int count_
                       optimal_vertices(gpc_vertex_list c)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.411 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.411 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.413   if (c.num_
                  vertices > 0)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.421 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.422 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (541.71974pt too wide) in paragraph at lines 412--422
[]\tenrm /* Ignore non-contributing con-to-urs */ if (c.num$[]\teni ertices > \
tenrm 0)[]\teni returnresult\tenrm ;$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm I
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.424 static edge_
                  node *build_lmt(lmt_node **lmt, sb_tree **sbtree,
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.431 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.431 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (444.12082pt too wide) in paragraph at lines 424--431
[]\tenrm static edge$[]\teni ode \tensy ^^C \teni build[]mt\tenrm (\teni lmt[]o
de \tensy ^^C ^^C\teni lmt; sb[]ree \tensy ^^C ^^C\teni sbtree; int \tensy ^^C 
\teni sbt[]ntries; gpc[]olygon \tensy ^^C \teni p; inttype; gpc[]pop\tenrm )[]$
 |

\hbox(7.5+2.86108)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm t
.\tenrm a
.\tenrm t
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.432   for (c= 0; c < p->num_
                              contours; c++)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.434 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.436   MALLOC(edge_
                    table, total_vertices * sizeof(edge_node),
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.438 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (169.09657pt too wide) in paragraph at lines 435--438
[]\tenrm /* Cre-ate the en-tire in-put po-ly-gon edge ta-ble in one go */ MALLO
C(edge$[]\teni able; total[]ertices \tensy ^^C \teni sizeof\tenrm (\teni edge[]
ode\tenrm )\teni ; \tenrm "\teni edgetablecreation\tenrm "\teni ; edge[]ode\ten
rm );$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm C
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.439   for (c= 0; c < p->num_
                              contours; c++)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.455 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.455 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.455 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.455 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (1806.58852pt too wide) in paragraph at lines 439--455
[]\tenrm for (c= 0; c < p->num$[]\teni ontours\tenrm ; \teni c \tenrm + +)[]$ |


\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm f
.\tenrm o
.\tenrm r
.\glue 3.33333 plus 1.66666 minus 1.11111
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.457           add_
                    to_sbtree(sbt_entries, sbtree,
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.459 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (13.87466pt too wide) in paragraph at lines 456--459
[]\tenrm /* Re-cord ver-tex in the scan-beam ta-ble */ add$[]\teni o[]btree\ten
rm (\teni sbt[]ntries; sbtree; edge[]able\tenrm [\teni num[]ertices\tenrm ]\ten
i :vertex:y\tenrm );$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm R
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.460           num_
                    vertices++;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.461         }
               
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.462 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.464       for (min= 0; min < num_
                                   vertices; min++)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.477 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.477 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.477 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (1160.90027pt too wide) in paragraph at lines 463--477
[]\tenrm /* Do the con-tour for-ward pass */ for (min= 0; min < num$[]\teni ert
ices\tenrm ; \teni min \tenrm + +)[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm D
.etc.

! Misplaced alignment tab character &.
l.479           e= &
                    edge_table[e_index];
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.479           e= &edge_
                         table[e_index];
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.490 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.490 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (12.47122pt too wide) in paragraph at lines 478--490
[]\tenrm /* Bu-ild the next edge list */ e= edge$[]\teni able\tenrm [\teni e[]n
dex\tenrm ]; \teni e[]ndex\tenrm + = \teni num[]dges\tenrm ; \teni v \tenrm = \
teni min\tenrm ; \teni e\tenrm [0]\teni :bstate\tenrm [\teni BELOW\tenrm ] =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm B
.etc.


Overfull \hbox (7.75606pt too wide) in paragraph at lines 478--490
\teni UNBUNDLED\tenrm ; \teni e\tenrm [0]\teni :bundle\tenrm [\teni BELOW\tenrm
 ][\teni CLIP\tenrm ] = \teni FALSE\tenrm ; \teni e\tenrm [0]\teni :bundle\tenr
m [\teni BELOW\tenrm ][\teni SUBJ\tenrm ] = \teni FALSE\tenrm ; \teni for\tenrm
 (\teni i \tenrm =|

\hbox(7.5+2.5)x469.75499
.\teni U
.\kern1.09026
.\teni N
.\kern1.09026
.\teni B
.etc.


Overfull \hbox (54.57974pt too wide) in paragraph at lines 478--490
\tenrm 0; \teni i < num[]dges\tenrm ; \teni i \tenrm + +)[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm 0
.\tenrm ;
.\glue(\thinmuskip) 1.66663
.\teni i
.\glue(\thickmuskip) 2.77771 plus 2.77771
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.491             v= NEXT_
                          INDEX(v, num_vertices);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.492 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.493             e[i].top.x= edge_
                                   table[v].vertex.x;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.502             e[i].succ= ((num_edges > 1) &
                                               & (i < (num_edges - 1))) ?
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.502             e[i].succ= ((num_edges > 1) &&
                                                 (i < (num_edges - 1))) ?
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.503                        &
                              (e[i + 1]) : NULL;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.504             e[i].pred= ((num_edges > 1) &
                                               & (i > 0)) ? &(e[i - 1]) : NULL;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.504             e[i].pred= ((num_edges > 1) &&
                                                 (i > 0)) ? &(e[i - 1]) : NULL;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.504 ...i].pred= ((num_edges > 1) && (i > 0)) ? &
                                                  (e[i - 1]) : NULL;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.508           }
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.510         }
               
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.511       }
             
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.512 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (50.6761pt too wide) in paragraph at lines 493--512
\teni e\tenrm [\teni i\tenrm ]\teni :bot:x\tenrm )\teni =\tenrm (\teni e\tenrm 
[\teni i\tenrm ]\teni :top:y \tensy ^^@ \teni e\tenrm [\teni i\tenrm ]\teni :bo
t:y\tenrm ); \teni e\tenrm [\teni i\tenrm ]\teni :type \tenrm = \teni type\tenr
m ; \teni e\tenrm [\teni i\tenrm ]\teni :outp\tenrm [\teni ABOVE\tenrm ] = \ten
i NULL\tenrm ; \teni e\tenrm [\teni i\tenrm ]\teni :outp\tenrm [\teni BELOW\ten
rm ] = \teni NULL\tenrm ; \teni e\tenrm [\teni i\tenrm ]\teni :next \tenrm =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\teni e
.\tenrm [
.\teni i
.\tenrm ]
.\teni :
.etc.


Overfull \hbox (53.45648pt too wide) in paragraph at lines 493--512
\tenrm ((\teni num[]dges > \tenrm 1)(\teni i > \tenrm 0))?(\teni e\tenrm [\teni
 i \tensy ^^@ \tenrm 1]) : \teni NULL\tenrm ; \teni e\tenrm [\teni i\tenrm ]\te
ni :next[]ound \tenrm = \teni NULL\tenrm ; \teni e\tenrm [\teni i\tenrm ]\teni 
:bside\tenrm [\teni CLIP\tenrm ] = (\teni op \tenrm == \teni GPC[]IFF\tenrm )?\
teni RIGHT \tenrm :|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm (
.\tenrm (
.\teni n
.\teni u
.\teni m
.etc.

 [2]
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.514       for (min= 0; min < num_
                                   vertices; min++)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.527 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.527 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.527 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (1160.13928pt too wide) in paragraph at lines 513--527
[]\tenrm /* Do the con-tour re-verse pass */ for (min= 0; min < num$[]\teni ert
ices\tenrm ; \teni min \tenrm + +)[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm D
.etc.

! Misplaced alignment tab character &.
l.529           e= &
                    edge_table[e_index];
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.529           e= &edge_
                         table[e_index];
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.540 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.540 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (29.77681pt too wide) in paragraph at lines 528--540
[]\tenrm /* Bu-ild the pre-vious edge list */ e= edge$[]\teni able\tenrm [\teni
 e[]ndex\tenrm ]; \teni e[]ndex\tenrm + = \teni num[]dges\tenrm ; \teni v \tenr
m = \teni min\tenrm ; \teni e\tenrm [0]\teni :bstate\tenrm [\teni BELOW\tenrm ]
 =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm B
.etc.


Overfull \hbox (7.75606pt too wide) in paragraph at lines 528--540
\teni UNBUNDLED\tenrm ; \teni e\tenrm [0]\teni :bundle\tenrm [\teni BELOW\tenrm
 ][\teni CLIP\tenrm ] = \teni FALSE\tenrm ; \teni e\tenrm [0]\teni :bundle\tenr
m [\teni BELOW\tenrm ][\teni SUBJ\tenrm ] = \teni FALSE\tenrm ; \teni for\tenrm
 (\teni i \tenrm =|

\hbox(7.5+2.5)x469.75499
.\teni U
.\kern1.09026
.\teni N
.\kern1.09026
.\teni B
.etc.


Overfull \hbox (54.57974pt too wide) in paragraph at lines 528--540
\tenrm 0; \teni i < num[]dges\tenrm ; \teni i \tenrm + +)[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm 0
.\tenrm ;
.\glue(\thinmuskip) 1.66663
.\teni i
.\glue(\thickmuskip) 2.77771 plus 2.77771
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.541             v= PREV_
                          INDEX(v, num_vertices);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.542 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.543             e[i].top.x= edge_
                                   table[v].vertex.x;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.552             e[i].succ= ((num_edges > 1) &
                                               & (i < (num_edges - 1))) ?
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.552             e[i].succ= ((num_edges > 1) &&
                                                 (i < (num_edges - 1))) ?
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.553                        &
                              (e[i + 1]) : NULL;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.554             e[i].pred= ((num_edges > 1) &
                                               & (i > 0)) ? &(e[i - 1]) : NULL;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.554             e[i].pred= ((num_edges > 1) &&
                                                 (i > 0)) ? &(e[i - 1]) : NULL;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.554 ...i].pred= ((num_edges > 1) && (i > 0)) ? &
                                                  (e[i - 1]) : NULL;
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.558           }
                 
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.560         }
               
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.561       }
             
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.562     }
           
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.563   }
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.565 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.566 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (50.6761pt too wide) in paragraph at lines 543--566
\teni e\tenrm [\teni i\tenrm ]\teni :bot:x\tenrm )\teni =\tenrm (\teni e\tenrm 
[\teni i\tenrm ]\teni :top:y \tensy ^^@ \teni e\tenrm [\teni i\tenrm ]\teni :bo
t:y\tenrm ); \teni e\tenrm [\teni i\tenrm ]\teni :type \tenrm = \teni type\tenr
m ; \teni e\tenrm [\teni i\tenrm ]\teni :outp\tenrm [\teni ABOVE\tenrm ] = \ten
i NULL\tenrm ; \teni e\tenrm [\teni i\tenrm ]\teni :outp\tenrm [\teni BELOW\ten
rm ] = \teni NULL\tenrm ; \teni e\tenrm [\teni i\tenrm ]\teni :next \tenrm =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\teni e
.\tenrm [
.\teni i
.\tenrm ]
.\teni :
.etc.


Overfull \hbox (53.45648pt too wide) in paragraph at lines 543--566
\tenrm ((\teni num[]dges > \tenrm 1)(\teni i > \tenrm 0))?(\teni e\tenrm [\teni
 i \tensy ^^@ \tenrm 1]) : \teni NULL\tenrm ; \teni e\tenrm [\teni i\tenrm ]\te
ni :next[]ound \tenrm = \teni NULL\tenrm ; \teni e\tenrm [\teni i\tenrm ]\teni 
:bside\tenrm [\teni CLIP\tenrm ] = (\teni op \tenrm == \teni GPC[]IFF\tenrm )?\
teni RIGHT \tenrm :|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm (
.\tenrm (
.\teni n
.\teni u
.\teni m
.etc.


Overfull \hbox (5.33075pt too wide) in paragraph at lines 543--566
\teni LEFT\tenrm ; \teni e\tenrm [\teni i\tenrm ]\teni :bside\tenrm [\teni SUBJ
\tenrm ] = \teni LEFT\tenrm ; \teni insert[]ound\tenrm (\teni bound[]ist\tenrm 
(\teni lmt; edge[]able\tenrm [\teni min\tenrm ]\teni :vertex:y\tenrm )\teni ; e
\tenrm ); \teni returnedge[]able\tenrm ;$ |

\hbox(7.5+2.5)x469.75499
.\teni L
.\teni E
.\kern0.57637
.\teni F
.\kern1.3889
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.568 static void add_
                      edge_to_aet(edge_node **aet, edge_node *edge, edge_nod...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.604           add_edge_to_aet(&
                                 ((*aet)->next), edge, *aet);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.610         add_edge_to_aet(&
                               ((*aet)->next), edge, *aet);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.615 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (2929.33073pt too wide) in paragraph at lines 568--615
[]\tenrm static void add$[]\teni dge[]o[]et\tenrm (\teni edge[]ode \tensy ^^C ^
^C\teni aet; edge[]ode \tensy ^^C \teni edge; edge[]ode \tensy ^^C \teni prev\t
enrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm t
.\tenrm a
.\tenrm t
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.617 static void add_
                      intersection(it_node **it, edge_node *edge0, edge_node...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.621 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.621 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (38.45193pt too wide) in paragraph at lines 617--621
[]\tenrm static void add$[]\teni ntersection\tenrm (\teni it[]ode \tensy ^^C ^^
C\teni it; edge[]ode \tensy ^^C \teni edge\tenrm 0\teni ; edge[]ode \tensy ^^C 
\teni edge\tenrm 1\teni ; doublex; doubley\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm t
.\tenrm a
.\tenrm t
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.625     MALLOC(*it, sizeof(it_
                                node), "IT insertion", it_node);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.631   }
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.647       add_intersection(&
                              ((*it)->next), edge0, edge1, x, y);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.649 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.650 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (51.1722pt too wide) in paragraph at lines 622--650
[]\tenrm if (!*it)  /* Ap-pend a new node to the tail of the list */ MAL-LOC(*i
t, sizeof(it$[]\teni ode\tenrm )\teni ; \tenrm "\teni ITinsertion\tenrm "\teni 
; it[]ode\tenrm ); (\tensy ^^C\teni it\tenrm )\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.


Overfull \hbox (1074.89554pt too wide) in paragraph at lines 622--650
\teni NULL\tenrm ; \teni else[]$ |

\hbox(7.5+2.5)x469.75499
.\teni N
.\kern1.09026
.\teni U
.\kern1.09026
.\teni L
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.652 static void add_
                      st_edge(st_node **st, it_node **it, edge_node *edge,
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.657 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.657 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (29.1004pt too wide) in paragraph at lines 652--657
[]\tenrm static void add$[]\teni t[]dge\tenrm (\teni st[]ode \tensy ^^C ^^C\ten
i st; it[]ode \tensy ^^C ^^C\teni it; edge[]ode \tensy ^^C \teni edge; doubledy
\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm t
.\tenrm a
.\tenrm t
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.661     MALLOC(*st, sizeof(st_
                                node), "ST insertion", st_node);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.667   }
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.671 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.671 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (58.07246pt too wide) in paragraph at lines 658--671
[]\tenrm if (!*st)  /* Ap-pend edge onto the tail end of the ST */ MAL-LOC(*st,
 sizeof(st$[]\teni ode\tenrm )\teni ; \tenrm "\teni STinsertion\tenrm "\teni ; 
st[]ode\tenrm ); (\tensy ^^C\teni st\tenrm )\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.674         (fabs(den) <= DBL_
                                EPSILON))
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.691 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.691 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (1560.91093pt too wide) in paragraph at lines 672--691
\tenrm (fabs(den) <= DBL$[]\teni PSILON\tenrm ))[]\teni else[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm (
.\tenrm f
.\tenrm a
.\tenrm b
.\tenrm s
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.693       add_
                intersection(it, (*st)->edge, edge, x, y);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.694 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (27.02763pt too wide) in paragraph at lines 692--694
[]\tenrm /* In-sert the edge po-in-ters and the in-ter-sec-tion po-int in the I
T */ add$[]\teni ntersection\tenrm (\teni it; \tenrm (\tensy ^^C\teni st\tenrm 
)\tensy ^^@ \teni > edge; edge; x; y\tenrm );$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm I
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.696       add_
                st_edge(&((*st)->prev), it, edge, dy);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.696       add_st_edge(&
                         ((*st)->prev), it, edge, dy);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.697     }
           
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.698   }
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.699 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.700 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.702 static void build_
                        intersection_table(it_node **it, edge_node *aet, dou...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.706 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.706 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.708   reset_
              it(it);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.710 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.714     if ((edge->bstate[ABOVE] == BUNDLE_
                                             HEAD) ||
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.716       add_st_edge(&
                         st, it, edge, dy);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.717   }
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.718 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (33.47945pt too wide) in paragraph at lines 711--718
\tenrm BUNDLE$[]\teni EAD\tenrm )\tensy jj\teni edge\tensy ^^@ \teni > bundle\t
enrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ]\tensy jj\teni edge\tensy ^^@ \teni
 > bundle\tenrm [\teni ABOVE\tenrm ][\teni SUBJ\tenrm ])\teni add[]t[]dge\tenrm
 (\teni st; it; edge; dy\tenrm );$ |

\hbox(7.5+2.5)x469.75499
.\tenrm B
.\tenrm U
.\tenrm N
.\tenrm D
.\tenrm L
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.728 static int count_
                       contours(polygon_node *polygon)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.732 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.732 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.762 static void add_
                      left(polygon_node *p, double x, double y)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.765 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.765 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.767   MALLOC(nv, sizeof(vertex_
                                 node), "vertex node creation", vertex_node);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.770 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (88.95139pt too wide) in paragraph at lines 766--770
[]\tenrm /* Cre-ate a new ver-tex node and set its fields */ MAL-LOC(nv, sizeof
(vertex$[]\teni ode\tenrm )\teni ; \tenrm "\teni vertexnodecreation\tenrm "\ten
i ; vertex[]ode\tenrm ); \teni nv\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm C
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.779 static void merge_
                        left(polygon_node *p, polygon_node *q, polygon_node ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.782 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.782 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (3.95412pt too wide) in paragraph at lines 786--791
[]\tenrm if (p->proxy != q->proxy)  /* As-sign p's ver-tex list to the left end
 of q's list */ p->proxy->v[RIGHT]->next=|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.806 static void add_
                      right(polygon_node *p, double x, double y)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.809 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.809 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.811   MALLOC(nv, sizeof(vertex_
                                 node), "vertex node creation", vertex_node);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.815 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (88.95139pt too wide) in paragraph at lines 810--815
[]\tenrm /* Cre-ate a new ver-tex node and set its fields */ MAL-LOC(nv, sizeof
(vertex$[]\teni ode\tenrm )\teni ; \tenrm "\teni vertexnodecreation\tenrm "\ten
i ; vertex[]ode\tenrm ); \teni nv\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm C
.etc.

 [3]
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.824 static void merge_
                        right(polygon_node *p, polygon_node *q, polygon_node...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.827 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.827 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (10.37079pt too wide) in paragraph at lines 831--836
[]\tenrm if (p->proxy != q->proxy)  /* As-sign p's ver-tex list to the ri-ght e
nd of q's list */ q->proxy->v[RIGHT]->next=|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.850 static void add_
                      local_min(polygon_node **p, edge_node *edge,
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.855 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.855 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (66.39098pt too wide) in paragraph at lines 850--855
[]\tenrm static void add$[]\teni ocal[]in\tenrm (\teni polygon[]ode \tensy ^^C 
^^C\teni p; edge[]ode \tensy ^^C \teni edge; doublex; doubley\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm t
.\tenrm a
.\tenrm t
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.856   existing_
                 min= *p;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.857 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.858   MALLOC(*p, sizeof(polygon_
                                  node), "polygon node creation", polygon_no...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.859 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.861   MALLOC(nv, sizeof(vertex_
                                 node), "vertex node creation", vertex_node);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.865 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (88.95139pt too wide) in paragraph at lines 860--865
[]\tenrm /* Cre-ate a new ver-tex node and set its fields */ MAL-LOC(nv, sizeof
(vertex$[]\teni ode\tenrm )\teni ; \tenrm "\teni vertexnodecreation\tenrm "\ten
i ; vertex[]ode\tenrm ); \teni nv\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm C
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.869   (*p)->next= existing_
                             min;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.870 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (8.62283pt too wide) in paragraph at lines 866--870
[]\tenrm /* In-i-tia-lise proxy to po-int to p it-self */ (*p)->proxy= (*p); (*
p)->active= TRUE; (*p)->next= existing$[]\teni in\tenrm ;$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm I
.etc.

! Too many }'s.
l.877 }
       
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.880 static int count_
                       tristrips(polygon_node *tn)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.883 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.883 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Too many }'s.
l.888 }
       
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.891 static void add_
                      vertex(vertex_node **t, double x, double y)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.902     add_vertex(&
                      ((*t)->next), x, y);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.904 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (681.0992pt too wide) in paragraph at lines 891--904
[]\tenrm static void add$[]\teni ertex\tenrm (\teni vertex[]ode \tensy ^^C ^^C\
teni t; doublex; doubley\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm t
.\tenrm a
.\tenrm t
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.906 static void new_
                      tristrip(polygon_node **tn, edge_node *edge,
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.916     add_vertex(&
                      ((*tn)->v[LEFT]), x, y);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.921     new_tristrip(&
                        ((*tn)->next), edge, x, y);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.923 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (1364.49815pt too wide) in paragraph at lines 906--923
[]\tenrm static void new$[]\teni ristrip\tenrm (\teni polygon[]ode \tensy ^^C ^
^C\teni tn; edge[]ode \tensy ^^C \teni edge; doublex; doubley\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm t
.\tenrm a
.\tenrm t
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.925 static bbox *create_
                          contour_bboxes(gpc_polygon *p)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.929 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.929 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.930   MALLOC(box, p->num_
                           contours * sizeof(bbox), "Bounding box creation",...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.931 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.933   for (c= 0; c < p->num_
                              contours; c++)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.940 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.940 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (523.09976pt too wide) in paragraph at lines 932--940
[]\tenrm /* Con-struct con-tour bo-un-ding bo-xes */ for (c= 0; c < p->num$[]\t
eni ontours\tenrm ; \teni c \tenrm + +)[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm C
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.941     for (v= 0; v < p->contour[c].num_
                                           vertices; v++)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.953   }
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.955 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.956 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (1483.20554pt too wide) in paragraph at lines 941--956
[]\tenrm for (v= 0; v < p->contour[c].num$[]\teni ertices\tenrm ; \teni v \tenr
m + +)[]\teni returnbox\tenrm ;$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm f
.\tenrm o
.\tenrm r
.\glue 3.33333 plus 1.66666 minus 1.11111
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.958 static void minimax_
                          test(gpc_polygon *subj, gpc_polygon *clip, gpc_op op)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.962 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.962 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (34.78633pt too wide) in paragraph at lines 958--962
[]\tenrm static void minimax$[]\teni est\tenrm (\teni gpc[]olygon \tensy ^^C \t
eni subj; gpc[]olygon \tensy ^^C \teni clip; gpc[]pop\tenrm )[]$ |

\hbox(7.5+2.86108)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm t
.\tenrm a
.\tenrm t
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.963   s_
          bbox= create_contour_bboxes(subj);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.965 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.966   MALLOC(o_
                 table, subj->num_contours * clip->num_contours * sizeof(int),
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.968 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (13.5977pt too wide) in paragraph at lines 966--968
[]\tenrm MALLOC(o$[]\teni able; subj\tensy ^^@ \teni > num[]ontours \tensy ^^C 
\teni clip\tensy ^^@ \teni > num[]ontours \tensy ^^C \teni sizeof\tenrm (\teni 
int\tenrm )\teni ; \tenrm "\teni overlaptablecreation\tenrm "\teni ; int\tenrm 
);$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm M
.\tenrm A
.\tenrm L
.\tenrm L
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.970   for (s= 0; s < subj->num_
                                 contours; s++)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.974 ...    (s_bbox[s].xmin > c_bbox[c].xmax))) &
                                                  &
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.974 ...   (s_bbox[s].xmin > c_bbox[c].xmax))) &&
                                                  
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.977 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.979   for (c= 0; c < clip->num_
                                 contours; c++)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.982     for (s= 0; (!overlap) &
                                 & (s < subj->num_contours); s++)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.982     for (s= 0; (!overlap) &&
                                   (s < subj->num_contours); s++)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.984 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.984 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (57.33832pt too wide) in paragraph at lines 978--984
\tenrm +)[]$ |

\hbox(7.5+2.5)x469.75499
.\tenrm +
.\tenrm )
.\hbox(7.5+2.5)x515.4266
..\teni o
..\teni v
..\kern0.35878
..\teni e
..\teni r
..etc.
.\mathoff
.\penalty 10000
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.987       clip->contour[c].num_
                                 vertices = -clip->contour[c].num_vertices;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.988   }
         
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.989 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.990   if (op == GPC_
                      INT)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.996       for (c= 0; (!overlap) &
                                   & (c < clip->num_contours); c++)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.996       for (c= 0; (!overlap) &&
                                     (c < clip->num_contours); c++)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.998 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.998 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.998 
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (633.88016pt too wide) in paragraph at lines 990--998
[]\tenrm if (op == GPC$[]\teni NT\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1001         subj->contour[s].num_
                                    vertices = -subj->contour[s].num_vertices;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1002     }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1003   }
          
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1004 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1005   FREE(s_
                bbox);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1008 }
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1009 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (145.80237pt too wide) in paragraph at lines 1011--1016
[]\tenrm /* ===================================================================
========|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm =
.etc.


Overfull \hbox (188.35805pt too wide) in paragraph at lines 1011--1016
\tenrm Pu-blic Func-tions =====================================================
======================|

\hbox(6.88889+0.0)x469.75499, glue set - 1.0
.\tenrm P
.\tenrm u
.\discretionary
..\tenrm -
.\tenrm b
.\tenrm l
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1017 void gpc_
                free_polygon(gpc_polygon *p)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1020 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1020 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1021   for (c= 0; c < p->num_
                               contours; c++)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1026 }
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1027 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1029 void gpc_
                read_polygon(FILE *fp, int read_hole_flags, gpc_polygon *p)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1032 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1032 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1034   MALLOC(p->hole, p->num_
                                contours * sizeof(int),
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1041 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1041 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (23.73628pt too wide) in paragraph at lines 1033--1041
[]\tenrm fscanf(fp, "MALLOC(p->hole, p->num$[]\teni ontours \tensy ^^C \teni si
zeof\tenrm (\teni int\tenrm )\teni ; \tenrm "\teni holeflagarraycreation\tenrm 
"\teni ; int\tenrm ); \teni MALLOC\tenrm (\teni p\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm f
.\tenrm s
.\tenrm c
.\tenrm a
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1042     if (read_
                    hole_flags)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1046 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1047 ...p->contour[c].vertex, p->contour[c].num_
                                                  vertices
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1051                             &
                                    (p->contour[c].vertex[v].y));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.1052   }
          
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1053 }
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1054 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (58.19937pt too wide) in paragraph at lines 1047--1054
[]\tenrm MALLOC(p->contour[c].vertex, p->contour[c].num$[]\teni ertices \tensy 
^^C \teni sizeof\tenrm (\teni gpc[]ertex\tenrm )\teni ; \tenrm "\teni vertexcre
ation\tenrm "\teni ; gpc[]ertex\tenrm ); \teni for\tenrm (\teni v \tenrm =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm M
.\tenrm A
.\tenrm L
.\tenrm L
.etc.

 [4]
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1056 void gpc_
                write_polygon(FILE *fp, int write_hole_flags, gpc_polygon *p)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1059 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1059 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1061   for (c= 0; c < p->num_
                               contours; c++)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1064 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1064 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1065     if (write_
                     hole_flags)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1067 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1068     for (v= 0; v < p->contour[c].num_
                                            vertices; v++)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1072   }
          
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1073 }
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1074 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (52.95677pt too wide) in paragraph at lines 1068--1074
[]\tenrm for (v= 0; v < p->contour[c].num$[]\teni ertices\tenrm ; \teni v \tenr
m + +)\teni fprintf\tenrm (\teni fp; \tenrm "\teni DBL[]IG; p\tensy ^^@ \teni >
 contour\tenrm [\teni c\tenrm ]\teni :vertex\tenrm [\teni v\tenrm ]\teni :x; DB
L[]IG; p\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm f
.\tenrm o
.\tenrm r
.\glue 3.33333 plus 1.66666 minus 1.11111
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1076 void gpc_
                add_contour(gpc_polygon *p, gpc_vertex_list *new_contour, in...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1080 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1080 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (101.6862pt too wide) in paragraph at lines 1076--1080
[]\tenrm void gpc$[]\teni dd[]ontour\tenrm (\teni gpc[]olygon \tensy ^^C \teni 
p; gpc[]ertex[]ist \tensy ^^C \teni new[]ontour; inthole\tenrm )[]$ |

\hbox(7.5+2.86108)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm v
.\kern-0.27779
.\tenrm o
.\tenrm i
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1082   MALLOC(extended_
                         hole, (p->num_contours + 1)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1084 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (103.1624pt too wide) in paragraph at lines 1081--1084
[]\tenrm /* Cre-ate an exten-ded hole ar-ray */ MALLOC(extended$[]\teni ole; \t
enrm (\teni p\tensy ^^@ \teni > num[]ontours \tenrm + 1) \tensy ^^C \teni sizeo
f\tenrm (\teni int\tenrm )\teni ; \tenrm "\teni contourholeaddition\tenrm "\ten
i ; int\tenrm );$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm C
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1086   MALLOC(extended_
                         contour, (p->num_contours + 1)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1088 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (204.3393pt too wide) in paragraph at lines 1085--1088
[]\tenrm /* Cre-ate an exten-ded con-tour ar-ray */ MALLOC(extended$[]\teni ont
our; \tenrm (\teni p\tensy ^^@ \teni > num[]ontours \tenrm + 1) \tensy ^^C \ten
i sizeof\tenrm (\teni gpc[]ertex[]ist\tenrm )\teni ; \tenrm "\teni contouraddit
ion\tenrm "\teni ; gpc[]ertex[]ist\tenrm );$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm C
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1090   for (c= 0; c < p->num_
                               contours; c++)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1095 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1097   c= p->num_
                   contours;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1104 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (29.2015pt too wide) in paragraph at lines 1096--1104
[]\tenrm /* Copy the new con-tour and hole onto the end of the exten-ded ar-ray
s */ c= p->num$[]\teni ontours\tenrm ; \teni extended[]ole\tenrm [\teni c\tenrm
 ] =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm C
.etc.


Overfull \hbox (81.81279pt too wide) in paragraph at lines 1096--1104
\teni hole\tenrm ; \teni extended[]ontour\tenrm [\teni c\tenrm ]\teni :num[]ert
ices \tenrm = \teni new[]ontour\tensy ^^@ \teni > num[]ertices\tenrm ; \teni MA
LLOC\tenrm (\teni extended[]ontour\tenrm [\teni c\tenrm ]\teni :vertex; new[]on
tour\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni h
.\teni o
.\teni l
.\kern0.19678
.\teni e
.etc.


Overfull \hbox (22.60938pt too wide) in paragraph at lines 1096--1104
\teni num[]ertices \tensy ^^C \teni sizeof\tenrm (\teni gpc[]ertex\tenrm )\teni
 ; \tenrm "\teni contouraddition\tenrm "\teni ; gpc[]ertex\tenrm ); \teni for\t
enrm (\teni v \tenrm = 0; \teni v < new[]ontour\tensy ^^@ \teni > num[]ertices\
tenrm ; \teni v \tenrm +|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\teni n
.\teni u
.\teni m
.\hbox(3.01389+0.0)x4.75119, shifted 1.49998
..\seveni v
.\teni e
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1110   p->num_
                contours++;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1113 }
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1114 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1116 void gpc_
                polygon_clip(gpc_op op, gpc_polygon *subj, gpc_polygon *clip,
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1131 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1131 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (2052.83073pt too wide) in paragraph at lines 1116--1131
[]\tenrm void gpc$[]\teni olygon[]lip\tenrm (\teni gpc[]pop; gpc[]olygon \tensy
 ^^C \teni subj; gpc[]olygon \tensy ^^C \teni clip; gpc[]olygon \tensy ^^C \ten
i result\tenrm )[]$ |

\hbox(7.5+2.86108)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm v
.\kern-0.27779
.\tenrm o
.\tenrm i
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1133   if (((subj->num_
                         contours == 0) && (clip->num_contours == 0))
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1133   if (((subj->num_contours == 0) &
                                         & (clip->num_contours == 0))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1133   if (((subj->num_contours == 0) &&
                                           (clip->num_contours == 0))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1134    || ((subj->num_contours == 0) &
                                         & ((op == GPC_INT) || (op == GPC_DI...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1134    || ((subj->num_contours == 0) &&
                                           ((op == GPC_INT) || (op == GPC_DI...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1135    || ((clip->num_contours == 0) &
                                         &  (op == GPC_INT)))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1135    || ((clip->num_contours == 0) &&
                                            (op == GPC_INT)))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1142 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (3.21739pt too wide) in paragraph at lines 1132--1142
\tenrm 0))\tensy jj\tenrm ((\teni subj\tensy ^^@ \teni > num[]ontours \tenrm ==
 0)((\teni op \tenrm == \teni GPC[]NT\tenrm )\tensy jj\tenrm (\teni op \tenrm =
= \teni GPC[]IFF\tenrm )))\tensy jj\tenrm ((\teni clip\tensy ^^@ \teni > num[]o
ntours \tenrm ==|

\hbox(7.5+2.5)x469.75499
.\tenrm 0
.\tenrm )
.\tenrm )
.\tensy j
.\tensy j
.etc.


Overfull \hbox (36.40216pt too wide) in paragraph at lines 1132--1142
\tenrm 0)(\teni op \tenrm == \teni GPC[]NT\tenrm )))[]$ |

\hbox(7.5+2.5)x469.75499
.\tenrm 0
.\tenrm )
.\tenrm (
.\teni o
.\teni p
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1144   if (((op == GPC_
                         INT) || (op == GPC_DIFF))
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1145    &
           & (subj->num_contours > 0) && (clip->num_contours > 0))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1145    &&
             (subj->num_contours > 0) && (clip->num_contours > 0))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1145    && (subj->num_contours > 0) &
                                       & (clip->num_contours > 0))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1145    && (subj->num_contours > 0) &&
                                         (clip->num_contours > 0))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1147 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1149   if (subj->num_
                       contours > 0)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1150     s_heap= build_lmt(&
                              lmt, &sbtree, &sbt_entries, subj, SUBJ, op);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1150     s_heap= build_lmt(&lmt, &
                                    sbtree, &sbt_entries, subj, SUBJ, op);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1150     s_heap= build_lmt(&lmt, &sbtree, &
                                             sbt_entries, subj, SUBJ, op);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1152     c_heap= build_lmt(&
                              lmt, &sbtree, &sbt_entries, clip, CLIP, op);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1152     c_heap= build_lmt(&lmt, &
                                    sbtree, &sbt_entries, clip, CLIP, op);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1152     c_heap= build_lmt(&lmt, &sbtree, &
                                             sbt_entries, clip, CLIP, op);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1153 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (44.87852pt too wide) in paragraph at lines 1148--1153
[]\tenrm /* Bu-ild LMT */ if (subj->num$[]\teni ontours > \tenrm 0)\teni s[]eap
 \tenrm = \teni build[]mt\tenrm (\teni lmt; sbtree; sbt[]ntries; subj; SUBJ; op
\tenrm ); \teni if\tenrm (\teni clip\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm B
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1157     result->num_
                       contours= 0;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1160     reset_lmt(&
                      lmt);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.1164   }
          
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1165 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (19.25726pt too wide) in paragraph at lines 1154--1165
\tenrm 0; \teni result\tensy ^^@ \teni > hole \tenrm = \teni NULL\tenrm ; \teni
 result\tensy ^^@ \teni > contour \tenrm = \teni NULL\tenrm ; \teni reset[]mt\t
enrm (\teni lmt\tenrm ); \teni FREE\tenrm (\teni s[]eap\tenrm ); \teni FREE\ten
rm (\teni c[]eap\tenrm ); \teni return\tenrm ;$ |

\hbox(7.5+2.5)x469.75499
.\tenrm 0
.\tenrm ;
.\glue(\thinmuskip) 1.66663
.\teni r
.\kern0.27779
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1167   MALLOC(sbt, sbt_
                         entries * sizeof(double), "sbt creation", double);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1168   build_sbt(&
                    scanbeam, sbt, sbtree);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1170   free_sbtree(&
                      sbtree);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1171 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (231.98627pt too wide) in paragraph at lines 1166--1171
[]\tenrm /* Bu-ild scan-beam ta-ble from scan-beam tree */ MAL-LOC(sbt, sbt$[]\
teni ntries \tensy ^^C \teni sizeof\tenrm (\teni double\tenrm )\teni ; \tenrm "
\teni sbtcreation\tenrm "\teni ; double\tenrm ); \teni build[]bt\tenrm (\teni s
canbeam; sbt; sbtree\tenrm ); \teni scanbeam \tenrm =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm B
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1174     gpc_
               free_polygon(subj);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1177 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (19.9397pt too wide) in paragraph at lines 1172--1177
[]\tenrm /* Al-low po-in-ter re-use wi-thout cau-sing me-mory leak */ if (subj 
== re-sult) gpc$[]\teni ree[]olygon\tenrm (\teni subj\tenrm ); \teni if\tenrm (
\teni clip \tenrm ==|

\hbox(7.5+2.86108)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm A
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1179   if (op == GPC_
                       DIFF)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1181 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1182   local_
               min= lmt;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1183 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1185   while (scanbeam < sbt_
                               entries)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1194 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1194 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (404.19353pt too wide) in paragraph at lines 1184--1194
[]\tenrm /* Pro-cess each scan-beam */ while (scan-beam < sbt$[]\teni ntries\te
nrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm P
.etc.


Overfull \hbox (26.42345pt too wide) in paragraph at lines 1195--1196
[]\tenrm /* === SCAN-BEAM BO-UN-DARY PRO-CES-SING =============================
===|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm =
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1198     if (local_
                     min)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1204           add_edge_to_aet(&
                                  aet, edge, NULL);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1205 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1205 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1205 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (606.6838pt too wide) in paragraph at lines 1197--1205
[]\tenrm /* If LMT node cor-re-spon-ding to yb exi-sts */ if (local$[]\teni in\
tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm I
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1206         local_
                     min= local_min->next;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1207       }
              
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1208     }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1209 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1211     px= -DBL_
                    MAX;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1212 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (94.82942pt too wide) in paragraph at lines 1217--1221
[]\tenrm /* Set up bun-dle fields of first edge */ aet->bundle[ABOVE][ aet->typ
e]= (aet->top.y != yb); aet->bundle[ABOVE][!aet->type]=|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm S
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1222     for (next_
                     edge= aet->next; next_edge; next_edge= next_edge->next)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1228 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1228 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (871.26878pt too wide) in paragraph at lines 1222--1228
[]\tenrm for (next$[]\teni dge \tenrm = \teni aet\tensy ^^@ \teni > next\tenrm 
; \teni next[]dge\tenrm ; \teni next[]dge \tenrm = \teni next[]dge\tensy ^^@ \t
eni > next\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm f
.\tenrm o
.\tenrm r
.\glue 3.33333 plus 1.66666 minus 1.11111
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1230       if (next_
                      edge->bundle[ABOVE][next_edge->type])
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1232         if (EQ(e0->xb, next_edge->xb) &
                                              & EQ(e0->dx, next_edge->dx)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1232         if (EQ(e0->xb, next_edge->xb) &&
                                                EQ(e0->dx, next_edge->dx)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1233 	 &
          & (e0->top.y != yb))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1233 	 &&
            (e0->top.y != yb))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.1246     }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1247 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (37.92003pt too wide) in paragraph at lines 1229--1247
[]\tenrm /* Bun-dle ed-ges above the scan-beam bo-un-dary if they co-in-cide */
 if (next$[]\teni dge\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni
 next[]dge\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm B
.etc.


Overfull \hbox (1662.42992pt too wide) in paragraph at lines 1229--1247
\teni type\tenrm ])[]$ |

\hbox(7.5+2.5)x469.75499
.\teni t
.\teni y
.\kern0.35878
.\teni p
.\teni e
.etc.


Overfull \hbox (74.49393pt too wide) in paragraph at lines 1251--1258
\tenrm sts[CLIP]= edge->bundle[ABOVE][CLIP] + (edge->bundle[BELOW][CLIP] << 1);
 exi-sts[SUBJ]= edge->bundle[ABOVE][SUBJ]|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm s
.\tenrm t
.\tenrm s
.\tenrm [
.\tenrm C
.etc.


Overfull \hbox (33.15924pt too wide) in paragraph at lines 1259--1264
[]\tenrm if (exi-sts[CLIP] || exi-sts[SUBJ])  /* Set bun-dle side */ edge->bsid
e[CLIP]= pa-rity[CLIP]; edge->bside[SUBJ]=|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1268         case GPC_
                        DIFF:
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1270           contributing= (exists[CLIP] &
                                              & (parity[SUBJ] || horiz[SUBJ]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1270           contributing= (exists[CLIP] &&
                                                (parity[SUBJ] || horiz[SUBJ]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1271                      || (exists[SUBJ] &
                                              & (parity[CLIP] || horiz[CLIP]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1271                      || (exists[SUBJ] &&
                                                (parity[CLIP] || horiz[CLIP]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1272                      || (exists[CLIP] &
                                              & exists[SUBJ]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1272                      || (exists[CLIP] &&
                                                exists[SUBJ]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1273                      &
                             & (parity[CLIP] == parity[SUBJ]));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1273                      &&
                               (parity[CLIP] == parity[SUBJ]));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1275            &
                   & (parity[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1275            &&
                     (parity[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1277            &
                   & (parity[SUBJ] ^ edge->bundle[ABOVE][SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1277            &&
                     (parity[SUBJ] ^ edge->bundle[ABOVE][SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1279            &
                   & (parity[SUBJ] ^ (horiz[SUBJ]!=NH));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1279            &&
                     (parity[SUBJ] ^ (horiz[SUBJ]!=NH));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1281            &
                   & (parity[SUBJ] ^ (horiz[SUBJ]!=NH) ^ edge->bundle[BELOW]...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1281            &&
                     (parity[SUBJ] ^ (horiz[SUBJ]!=NH) ^ edge->bundle[BELOW]...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1295           contributing= (exists[CLIP] &
                                              & (!parity[SUBJ] || horiz[SUBJ]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1295           contributing= (exists[CLIP] &&
                                                (!parity[SUBJ] || horiz[SUBJ]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1296                      || (exists[SUBJ] &
                                              & (!parity[CLIP] || horiz[CLIP]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1296                      || (exists[SUBJ] &&
                                                (!parity[CLIP] || horiz[CLIP]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1297                      || (exists[CLIP] &
                                              & exists[SUBJ]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1297                      || (exists[CLIP] &&
                                                exists[SUBJ]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1298                      &
                             & (parity[CLIP] == parity[SUBJ]));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1298                      &&
                               (parity[CLIP] == parity[SUBJ]));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.1308         }
                
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1309 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (19.52654pt too wide) in paragraph at lines 1265--1309
[]\tenrm /* De-ter-mine con-tri-bu-ting sta-tus and qu-adrant oc-cu-pan-cies */
 switch (op)  case GPC$[]\teni IFF \tenrm : \teni caseGPC[]NT \tenrm :|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm D
.etc.


Overfull \hbox (220.76898pt too wide) in paragraph at lines 1265--1309
\teni contributing \tenrm = (\teni exists\tenrm [\teni CLIP\tenrm ](\teni parit
y\tenrm [\teni SUBJ\tenrm ]\tensy jj\teni horiz\tenrm [\teni SUBJ\tenrm ]))\ten
sy jj\tenrm (\teni exists\tenrm [\teni SUBJ\tenrm ](\teni parity\tenrm [\teni C
LIP\tenrm ]\tensy jj\teni horiz\tenrm [\teni CLIP\tenrm ]))\tensy jj\tenrm (\te
ni exists\tenrm [\teni CLIP\tenrm ]\teni exists\tenrm [\teni SUBJ\tenrm ](\teni
 parity\tenrm [\teni CLIP\tenrm ] ==|

\hbox(7.5+2.5)x469.75499
.\teni c
.\teni o
.\teni n
.\teni t
.\teni r
.etc.


Overfull \hbox (110.57585pt too wide) in paragraph at lines 1265--1309
\teni parity\tenrm [\teni SUBJ\tenrm ])); \teni br \tenrm = (\teni parity\tenrm
 [\teni CLIP\tenrm ])(\teni parity\tenrm [\teni SUBJ\tenrm ]); \teni bl \tenrm 
= (\teni parity\tenrm [\teni CLIP\tenrm ][]\teni dge\tensy ^^@ \teni > bundle\t
enrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])(\teni parity\tenrm [\teni SUBJ\te
nrm ][]\teni dge\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni p
.\teni a
.\teni r
.\kern0.27779
.\teni i
.etc.


Overfull \hbox (29.0004pt too wide) in paragraph at lines 1265--1309
\teni bundle\tenrm [\teni ABOVE\tenrm ][\teni SUBJ\tenrm ]); \teni tr \tenrm = 
(\teni parity\tenrm [\teni CLIP\tenrm ][]\teni horiz\tenrm [\teni CLIP\tenrm ]!
 = \teni NH\tenrm ))(\teni parity\tenrm [\teni SUBJ\tenrm ][]\teni horiz\tenrm 
[\teni SUBJ\tenrm ]! = \teni NH\tenrm )); \teni tl \tenrm =|

\hbox(8.87892+2.5)x469.75499
.\teni b
.\teni u
.\teni n
.\teni d
.\teni l
.etc.


Overfull \hbox (34.15863pt too wide) in paragraph at lines 1265--1309
\teni NH\tenrm )[]\teni dge\tensy ^^@ \teni > bundle\tenrm [\teni BELOW\tenrm ]
[\teni SUBJ\tenrm ]); \teni break\tenrm ; \teni caseGPC[]OR \tenrm : \teni cont
ributing \tenrm = \teni exists\tenrm [\teni CLIP\tenrm ]\tensy jj\teni exists\t
enrm [\teni SUBJ\tenrm ]; \teni br \tenrm =|

\hbox(7.5+2.5)x469.75499
.\teni N
.\kern1.09026
.\teni H
.\kern0.81247
.\tenrm )
.etc.


Overfull \hbox (13.21161pt too wide) in paragraph at lines 1265--1309
\tenrm (\teni parity\tenrm [\teni CLIP\tenrm ])[]\teni parity\tenrm [\teni SUBJ
\tenrm ]); \teni bl \tenrm = (\teni parity\tenrm [\teni CLIP\tenrm ][]\teni dge
\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])[]\teni
 parity\tenrm [\teni SUBJ\tenrm ][]\teni dge\tensy ^^@ \teni >|

\hbox(8.87892+2.5)x469.75499
.\tenrm (
.\teni p
.\teni a
.\teni r
.\kern0.27779
.etc.


Overfull \hbox (28.73651pt too wide) in paragraph at lines 1265--1309
\teni bundle\tenrm [\teni ABOVE\tenrm ][\teni SUBJ\tenrm ]); \teni tr \tenrm = 
(\teni parity\tenrm [\teni CLIP\tenrm ][]\teni horiz\tenrm [\teni CLIP\tenrm ]!
 = \teni NH\tenrm ))[]\teni parity\tenrm [\teni SUBJ\tenrm ][]\teni horiz\tenrm
 [\teni SUBJ\tenrm ]! = \teni NH\tenrm )); \teni tl \tenrm =|

\hbox(8.87892+2.5)x469.75499
.\teni b
.\teni u
.\teni n
.\teni d
.\teni l
.etc.


Overfull \hbox (525.30437pt too wide) in paragraph at lines 1265--1309
\teni NH\tenrm )[]\teni dge\tensy ^^@ \teni > bundle\tenrm [\teni BELOW\tenrm ]
[\teni SUBJ\tenrm ]); \teni break\tenrm ; \teni caseGPC[]NION \tenrm : \teni co
ntributing \tenrm = (\teni exists\tenrm [\teni CLIP\tenrm ](!\teni parity\tenrm
 [\teni SUBJ\tenrm ]\tensy jj\teni horiz\tenrm [\teni SUBJ\tenrm ]))\tensy jj\t
enrm (\teni exists\tenrm [\teni SUBJ\tenrm ](!\teni parity\tenrm [\teni CLIP\te
nrm ]\tensy jj\teni horiz\tenrm [\teni CLIP\tenrm ]))\tensy jj\tenrm (\teni exi
sts\tenrm [\teni CLIP\tenrm ]\teni exists\tenrm [\teni SUBJ\tenrm ](\teni parit
y\tenrm [\teni CLIP\tenrm ] ==|

\hbox(7.5+2.5)x469.75499
.\teni N
.\kern1.09026
.\teni H
.\kern0.81247
.\tenrm )
.etc.


Overfull \hbox (121.687pt too wide) in paragraph at lines 1265--1309
\teni parity\tenrm [\teni SUBJ\tenrm ])); \teni br \tenrm = (\teni parity\tenrm
 [\teni CLIP\tenrm ])\tensy jj\tenrm (\teni parity\tenrm [\teni SUBJ\tenrm ]); 
\teni bl \tenrm = (\teni parity\tenrm [\teni CLIP\tenrm ][]\teni dge\tensy ^^@ 
\teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])\tensy jj\tenrm (\
teni parity\tenrm [\teni SUBJ\tenrm ][]\teni dge\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni p
.\teni a
.\teni r
.\kern0.27779
.\teni i
.etc.


Overfull \hbox (45.40457pt too wide) in paragraph at lines 1265--1309
\teni NH\tenrm )); \teni tl \tenrm = (\teni parity\tenrm [\teni CLIP\tenrm ][]\
teni horiz\tenrm [\teni CLIP\tenrm ]! = \teni NH\tenrm )[]\teni dge\tensy ^^@ \
teni > bundle\tenrm [\teni BELOW\tenrm ][\teni CLIP\tenrm ])\tensy jj\tenrm (\t
eni parity\tenrm [\teni SUBJ\tenrm ][]\teni horiz\tenrm [\teni SUBJ\tenrm ]! =|


\hbox(8.87892+2.5)x469.75499
.\teni N
.\kern1.09026
.\teni H
.\kern0.81247
.\tenrm )
.etc.

 [5]
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   ^
l.1311         parity[CLIP]^
                            = edge->bundle[ABOVE][CLIP];
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1313 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (73.52554pt too wide) in paragraph at lines 1310--1313
[]\tenrm /* Update pa-rity */ parity[CLIP]$[]\teni edge\tensy ^^@ \teni > bundl
e\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ]; \teni parity\tenrm [\teni SUBJ
\tenrm ][]\teni edge\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni 
SUBJ\tenrm ];$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm U
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1317             next_
                        h_state[horiz[CLIP]]
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Double subscript.
l.1317             next_h_
                          state[horiz[CLIP]]
I treat `x_1_2' essentially like `x_1{}_2'.

! Double subscript.
l.1321             next_h_
                          state[horiz[SUBJ]]
I treat `x_1_2' essentially like `x_1{}_2'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1323 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1334             add_
                       local_min(&out_poly, edge, xb, yb);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1334             add_local_min(&
                                  out_poly, edge, xb, yb);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1394             add_local_min(&
                                  out_poly, edge, xb, yb);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1405             add_local_min(&
                                  out_poly, edge, xb, yb);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.1422           }
                   /* End of switch */
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1423         }
                 /* End of contributing conditional */
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1424       }
               /* End of edge exists conditional */
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1425     }
             /* End of AET loop */
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1426 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (9.42867pt too wide) in paragraph at lines 1330--1426
\teni outp\tenrm [\teni ABOVE\tenrm ]; \teni break\tenrm ; \teni caseERI \tenrm
 : \teni if\tenrm (\teni xb\tenrm ! = \teni px\tenrm )[]\teni edge\tensy ^^@ \t
eni > outp\tenrm [\teni ABOVE\tenrm ] = \teni cf\tenrm ; \teni cf \tenrm =|

\hbox(7.5+2.5)x469.75499
.\teni o
.\teni u
.\teni t
.\teni p
.\tenrm [
.etc.


Overfull \hbox (77.40428pt too wide) in paragraph at lines 1330--1426
\teni NULL\tenrm ; \teni break\tenrm ; \teni caseELI \tenrm : \teni add[]eft\te
nrm (\teni edge\tensy ^^@ \teni > outp\tenrm [\teni BELOW\tenrm ]\teni ; xb; yb
\tenrm ); \teni px \tenrm = \teni xb\tenrm ; \teni cf \tenrm = \teni edge\tensy
 ^^@ \teni > outp\tenrm [\teni BELOW\tenrm ]; \teni break\tenrm ; \teni caseEMX
 \tenrm :|

\hbox(7.5+2.5)x469.75499
.\teni N
.\kern1.09026
.\teni U
.\kern1.09026
.\teni L
.etc.


Overfull \hbox (54.43993pt too wide) in paragraph at lines 1330--1426
\teni if\tenrm (\teni xb\tenrm ! = \teni px\tenrm )[]\teni merge[]ight\tenrm (\
teni cf; edge\tensy ^^@ \teni > outp\tenrm [\teni BELOW\tenrm ]\teni ; out[]oly
\tenrm ); \teni cf \tenrm = \teni NULL\tenrm ; \teni break\tenrm ; \teni caseIL
I \tenrm :|

\hbox(7.5+2.86108)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni x
.etc.


Overfull \hbox (50.67955pt too wide) in paragraph at lines 1330--1426
\teni if\tenrm (\teni xb\tenrm ! = \teni px\tenrm )[]\teni edge\tensy ^^@ \teni
 > outp\tenrm [\teni ABOVE\tenrm ] = \teni cf\tenrm ; \teni cf \tenrm = \teni N
ULL\tenrm ; \teni break\tenrm ; \teni caseIRI \tenrm : \teni add[]ight\tenrm (\
teni edge\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni x
.etc.


Overfull \hbox (41.20216pt too wide) in paragraph at lines 1330--1426
\teni outp\tenrm [\teni BELOW\tenrm ]\teni ; xb; yb\tenrm ); \teni px \tenrm = 
\teni xb\tenrm ; \teni cf \tenrm = \teni edge\tensy ^^@ \teni > outp\tenrm [\te
ni BELOW\tenrm ]; \teni edge\tensy ^^@ \teni > outp\tenrm [\teni BELOW\tenrm ] 
= \teni NULL\tenrm ; \teni break\tenrm ; \teni caseIMX \tenrm :|

\hbox(7.5+2.5)x469.75499
.\teni o
.\teni u
.\teni t
.\teni p
.\tenrm [
.etc.


Overfull \hbox (21.7513pt too wide) in paragraph at lines 1330--1426
\teni if\tenrm (\teni xb\tenrm ! = \teni px\tenrm )[]\teni merge[]eft\tenrm (\t
eni cf; edge\tensy ^^@ \teni > outp\tenrm [\teni BELOW\tenrm ]\teni ; out[]oly\
tenrm ); \teni cf \tenrm = \teni NULL\tenrm ; \teni edge\tensy ^^@ \teni >|

\hbox(7.5+2.86108)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni x
.etc.


Overfull \hbox (8.86491pt too wide) in paragraph at lines 1330--1426
\teni outp\tenrm [\teni BELOW\tenrm ] = \teni NULL\tenrm ; \teni break\tenrm ; 
\teni caseIMM \tenrm : \teni if\tenrm (\teni xb\tenrm ! = \teni px\tenrm )[]\te
ni merge[]eft\tenrm (\teni cf; edge\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni o
.\teni u
.\teni t
.\teni p
.\tenrm [
.etc.


Overfull \hbox (8.74623pt too wide) in paragraph at lines 1330--1426
\teni outp\tenrm [\teni BELOW\tenrm ]\teni ; out[]oly\tenrm ); \teni edge\tensy
 ^^@ \teni > outp\tenrm [\teni BELOW\tenrm ] = \teni NULL\tenrm ; \teni add[]oc
al[]in\tenrm (\teni out[]oly; edge; xb; yb\tenrm ); \teni cf \tenrm = \teni edg
e\tensy ^^@ \teni >|

\hbox(7.5+2.86108)x469.75499
.\teni o
.\teni u
.\teni t
.\teni p
.\tenrm [
.etc.


Overfull \hbox (117.56058pt too wide) in paragraph at lines 1330--1426
\teni outp\tenrm [\teni ABOVE\tenrm ]; \teni break\tenrm ; \teni caseEMM \tenrm
 : \teni if\tenrm (\teni xb\tenrm ! = \teni px\tenrm )[]\teni merge[]ight\tenrm
 (\teni cf; edge\tensy ^^@ \teni > outp\tenrm [\teni BELOW\tenrm ]\teni ; out[]
oly\tenrm ); \teni edge\tensy ^^@ \teni >|

\hbox(7.5+2.86108)x469.75499
.\teni o
.\teni u
.\teni t
.\teni p
.\tenrm [
.etc.


Overfull \hbox (5.07771pt too wide) in paragraph at lines 1330--1426
\teni outp\tenrm [\teni BELOW\tenrm ] = \teni NULL\tenrm ; \teni add[]ocal[]in\
tenrm (\teni out[]oly; edge; xb; yb\tenrm ); \teni cf \tenrm = \teni edge\tensy
 ^^@ \teni > outp\tenrm [\teni ABOVE\tenrm ]; \teni break\tenrm ; \teni caseLED
 \tenrm :|

\hbox(7.5+2.86108)x469.75499
.\teni o
.\teni u
.\teni t
.\teni p
.\tenrm [
.etc.


Overfull \hbox (53.28659pt too wide) in paragraph at lines 1330--1426
\teni outp\tenrm [\teni BELOW\tenrm ]; \teni px \tenrm = \teni xb\tenrm ; \teni
 break\tenrm ; \teni caseRED \tenrm : \teni if\tenrm (\teni edge\tensy ^^@ \ten
i > bot:y \tenrm == \teni yb\tenrm )\teni add[]ight\tenrm (\teni edge\tensy ^^@
 \teni > outp\tenrm [\teni BELOW\tenrm ]\teni ; xb; yb\tenrm ); \teni edge\tens
y ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni o
.\teni u
.\teni t
.\teni p
.\tenrm [
.etc.


Overfull \hbox (87.54828pt too wide) in paragraph at lines 1330--1426
\teni outp\tenrm [\teni ABOVE\tenrm ] = \teni edge\tensy ^^@ \teni > outp\tenrm
 [\teni BELOW\tenrm ]; \teni px \tenrm = \teni xb\tenrm ; \teni break\tenrm ; \
teni default \tenrm : \teni break\tenrm ; \teni = \tensy ^^C \teni Endofswitch 
\tensy ^^C \teni == \tensy ^^C \teni Endofcontributingconditional \tensy ^^C|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\teni o
.\teni u
.\teni t
.\teni p
.\tenrm [
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1432         prev_
                    edge= edge->prev;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1440 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (33.58437pt too wide) in paragraph at lines 1427--1440
\tenrm edge->next)  if (edge->top.y == yb)  prev$[]\teni dge \tenrm = \teni edg
e\tensy ^^@ \teni > prev\tenrm ; \teni next[]dge \tenrm = \teni edge\tensy ^^@ 
\teni > next\tenrm ; \teni if\tenrm (\teni prev[]dge\tenrm )\teni prev[]dge\ten
sy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm e
.\tenrm d
.\tenrm g
.\tenrm e
.\tenrm -
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1442         if ((edge->bstate[BELOW] == BUNDLE_
                                                  HEAD) && prev_edge)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1442 ... ((edge->bstate[BELOW] == BUNDLE_HEAD) &
                                                  & prev_edge)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1442 ...((edge->bstate[BELOW] == BUNDLE_HEAD) &&
                                                   prev_edge)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.1453       }
              
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1461     }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1462 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (1549.1306pt too wide) in paragraph at lines 1441--1462
\tenrm BUNDLE$[]\teni EAD\tenrm )\teni prev[]dge\tenrm )[]\teni else[]$ |

\hbox(7.5+2.5)x469.75499
.\tenrm B
.\tenrm U
.\tenrm N
.\tenrm D
.\tenrm L
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1463     if (scanbeam < sbt_
                              entries)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1466 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1466 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (146.47717pt too wide) in paragraph at lines 1463--1466
[]\tenrm if (scan-beam < sbt$[]\teni ntries\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1467       build_
                   intersection_table(&it, aet, dy);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1467       build_intersection_table(&
                                       it, aet, dy);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1468 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1477          &
                 & (e1->bundle[ABOVE][CLIP] || e1->bundle[ABOVE][SUBJ]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1477          &&
                   (e1->bundle[ABOVE][CLIP] || e1->bundle[ABOVE][SUBJ]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


Overfull \hbox (77.68942pt too wide) in paragraph at lines 1475--1483
[]\tenrm /* Only ge-ne-rate out-put for con-tri-bu-ting in-ter-sec-tions */ if 
((e0->bundle[ABOVE][CLIP] || e0->bundle[ABOVE][SUBJ])|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm O
.etc.


Overfull \hbox (6.35382pt too wide) in paragraph at lines 1475--1483
\tenrm (e1->bundle[ABOVE][CLIP] || e1->bundle[ABOVE][SUBJ]))  p= e0->outp[ABOVE
]; q= e1->outp[ABOVE];|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm (
.\tenrm e
.\tenrm 1
.\tenrm -
.\discretionary
.etc.

! Misplaced alignment tab character &.
l.1484 ...   in[CLIP]= ( e0->bundle[ABOVE][CLIP] &
                                                  & !e0->bside[CLIP])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1484 ...  in[CLIP]= ( e0->bundle[ABOVE][CLIP] &&
                                                   !e0->bside[CLIP])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1485 ...          || ( e1->bundle[ABOVE][CLIP] &
                                                  &  e1->bside[CLIP])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1485 ...         || ( e1->bundle[ABOVE][CLIP] &&
                                                    e1->bside[CLIP])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1486 ...          || (!e0->bundle[ABOVE][CLIP] &
                                                  & !e1->bundle[ABOVE][CLIP]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1486 ...         || (!e0->bundle[ABOVE][CLIP] &&
                                                   !e1->bundle[ABOVE][CLIP]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1487                      &
                             & e0->bside[CLIP] && e1->bside[CLIP]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1487                      &&
                               e0->bside[CLIP] && e1->bside[CLIP]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1487                      && e0->bside[CLIP] &
                                                & e1->bside[CLIP]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1487                      && e0->bside[CLIP] &&
                                                  e1->bside[CLIP]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1488 ...   in[SUBJ]= ( e0->bundle[ABOVE][SUBJ] &
                                                  & !e0->bside[SUBJ])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1488 ...  in[SUBJ]= ( e0->bundle[ABOVE][SUBJ] &&
                                                   !e0->bside[SUBJ])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1489 ...          || ( e1->bundle[ABOVE][SUBJ] &
                                                  &  e1->bside[SUBJ])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1489 ...         || ( e1->bundle[ABOVE][SUBJ] &&
                                                    e1->bside[SUBJ])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1490 ...          || (!e0->bundle[ABOVE][SUBJ] &
                                                  & !e1->bundle[ABOVE][SUBJ]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1490 ...         || (!e0->bundle[ABOVE][SUBJ] &&
                                                   !e1->bundle[ABOVE][SUBJ]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1491                      &
                             & e0->bside[SUBJ] && e1->bside[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1491                      &&
                               e0->bside[SUBJ] && e1->bside[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1491                      && e0->bside[SUBJ] &
                                                & e1->bside[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1491                      && e0->bside[SUBJ] &&
                                                  e1->bside[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


Overfull \hbox (29.24037pt too wide) in paragraph at lines 1484--1492
[]\tenrm in[CLIP]= ( e0->bundle[ABOVE][CLIP]  !e0->bside[CLIP]) || ( e1->bundle
[ABOVE][CLIP]  e1->bside[CLIP])|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm n
.\tenrm [
.\tenrm C
.etc.


Overfull \hbox (6.18375pt too wide) in paragraph at lines 1484--1492
\tenrm || (!e0->bundle[ABOVE][CLIP]  !e1->bundle[ABOVE][CLIP]  e0->bside[CLIP] 
 e1->bside[CLIP]); in[SUBJ]=|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm |
.\tenrm |
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.\tenrm !
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1496           case GPC_
                          DIFF:
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1499              &
                     & (in[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1499              &&
                       (in[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1501              &
                     & (in[SUBJ] ^ e1->bundle[ABOVE][SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1501              &&
                       (in[SUBJ] ^ e1->bundle[ABOVE][SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1503              &
                     & (in[SUBJ] ^ e0->bundle[ABOVE][SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1503              &&
                       (in[SUBJ] ^ e0->bundle[ABOVE][SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1505              &
                     & (in[SUBJ] ^ e1->bundle[ABOVE][SUBJ] ^ e0->bundle[ABOV...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1505              &&
                       (in[SUBJ] ^ e1->bundle[ABOVE][SUBJ] ^ e0->bundle[ABOV...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.1527           }
                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1528 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (65.6299pt too wide) in paragraph at lines 1493--1528
[]\tenrm /* De-ter-mine qu-adrant oc-cu-pan-cies */ switch (op)  case GPC$[]\te
ni IFF \tenrm : \teni caseGPC[]NT \tenrm : \teni tr \tenrm = (\teni in\tenrm [\
teni CLIP\tenrm ])(\teni in\tenrm [\teni SUBJ\tenrm ]); \teni tl \tenrm =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm D
.etc.


Overfull \hbox (10.76352pt too wide) in paragraph at lines 1493--1528
\tenrm (\teni in\tenrm [\teni CLIP\tenrm ][]1\tensy ^^@ \teni > bundle\tenrm [\
teni ABOVE\tenrm ][\teni CLIP\tenrm ])(\teni in\tenrm [\teni SUBJ\tenrm ][]1\te
nsy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni SUBJ\tenrm ]); \teni br
 \tenrm = (\teni in\tenrm [\teni CLIP\tenrm ][]0\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\tenrm (
.\teni i
.\teni n
.\tenrm [
.\teni C
.etc.


Overfull \hbox (69.94044pt too wide) in paragraph at lines 1493--1528
\teni bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])(\teni in\tenrm [\te
ni SUBJ\tenrm ][]0\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni SU
BJ\tenrm ]); \teni bl \tenrm = (\teni in\tenrm [\teni CLIP\tenrm ][]1\tensy ^^@
 \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ][]0\tensy ^^@ \ten
i >|

\hbox(7.5+2.5)x469.75499
.\teni b
.\teni u
.\teni n
.\teni d
.\teni l
.etc.


Overfull \hbox (76.01811pt too wide) in paragraph at lines 1493--1528
\teni bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])(\teni in\tenrm [\te
ni SUBJ\tenrm ][]1\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni SU
BJ\tenrm ][]0\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni SUBJ\te
nrm ]); \teni break\tenrm ; \teni caseGPC[]OR \tenrm :|

\hbox(7.5+2.5)x469.75499
.\teni b
.\teni u
.\teni n
.\teni d
.\teni l
.etc.


Overfull \hbox (82.02347pt too wide) in paragraph at lines 1493--1528
\teni tr \tenrm = (\teni in\tenrm [\teni CLIP\tenrm ])[]\teni in\tenrm [\teni S
UBJ\tenrm ]); \teni tl \tenrm = (\teni in\tenrm [\teni CLIP\tenrm ][]1\tensy ^^
@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])[]\teni in\tenrm
 [\teni SUBJ\tenrm ][]1\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\te
ni SUBJ\tenrm ]); \teni br \tenrm =|

\hbox(8.87892+2.5)x469.75499
.\teni t
.\teni r
.\kern0.27779
.\glue(\thickmuskip) 2.77771 plus 2.77771
.\tenrm =
.etc.


Overfull \hbox (8.89084pt too wide) in paragraph at lines 1493--1528
\tenrm (\teni in\tenrm [\teni CLIP\tenrm ][]0\tensy ^^@ \teni > bundle\tenrm [\
teni ABOVE\tenrm ][\teni CLIP\tenrm ])[]\teni in\tenrm [\teni SUBJ\tenrm ][]0\t
ensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni SUBJ\tenrm ]); \teni b
l \tenrm = (\teni in\tenrm [\teni CLIP\tenrm ][]1\tensy ^^@ \teni >|

\hbox(8.87892+2.5)x469.75499
.\tenrm (
.\teni i
.\teni n
.\tenrm [
.\teni C
.etc.


Overfull \hbox (134.66133pt too wide) in paragraph at lines 1493--1528
\teni bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])\tensy jj\tenrm (\te
ni in\tenrm [\teni SUBJ\tenrm ][]1\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\
tenrm ][\teni SUBJ\tenrm ]); \teni br \tenrm = (\teni in\tenrm [\teni CLIP\tenr
m ][]0\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])\
tensy jj\tenrm (\teni in\tenrm [\teni SUBJ\tenrm ][]0\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni b
.\teni u
.\teni n
.\teni d
.\teni l
.etc.


Overfull \hbox (75.49602pt too wide) in paragraph at lines 1493--1528
\teni bundle\tenrm [\teni ABOVE\tenrm ][\teni SUBJ\tenrm ]); \teni bl \tenrm = 
(\teni in\tenrm [\teni CLIP\tenrm ][]1\tensy ^^@ \teni > bundle\tenrm [\teni AB
OVE\tenrm ][\teni CLIP\tenrm ][]0\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\t
enrm ][\teni CLIP\tenrm ])\tensy jj\tenrm (\teni in\tenrm [\teni SUBJ\tenrm ][]
1\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni b
.\teni u
.\teni n
.\teni d
.\teni l
.etc.

 [6]
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1534             add_
                       local_min(&out_poly, e0, ix, iy);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1534             add_local_min(&
                                  out_poly, e0, ix, iy);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1554             if (p &
                          & q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1554             if (p &&
                            q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1563             add_local_min(&
                                  out_poly, e0, ix, iy);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1583             if (p &
                          & q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1583             if (p &&
                            q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1592             if (p &
                          & q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1592             if (p &&
                            q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1596               add_local_min(&
                                    out_poly, e0, ix, iy);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1601             if (p &
                          & q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1601             if (p &&
                            q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1605               add_local_min(&
                                    out_poly, e0, ix, iy);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.1611           }
                   /* End of switch */
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1612 	}
          /* End of contributing intersection conditional */
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1613 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (86.90059pt too wide) in paragraph at lines 1531--1613
[]\tenrm switch (vclass)  case EMN: add$[]\teni ocal[]in\tenrm (\teni out[]oly;
 e\tenrm 0\teni ; ix; iy\tenrm ); \teni e\tenrm 1\tensy ^^@ \teni > outp\tenrm 
[\teni ABOVE\tenrm ] = \teni e\tenrm 0\tensy ^^@ \teni > outp\tenrm [\teni ABOV
E\tenrm ]; \teni break\tenrm ; \teni caseERI \tenrm :|

\hbox(7.5+2.86108)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm w
.\tenrm i
.\tenrm t
.etc.


Overfull \hbox (410.03162pt too wide) in paragraph at lines 1531--1613
\teni if\tenrm (\teni p\tenrm )[]\teni break\tenrm ; \teni caseELI \tenrm : \te
ni if\tenrm (\teni q\tenrm )[]\teni break\tenrm ; \teni caseEMX \tenrm :|

\hbox(7.5+2.5)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni p
.etc.


Overfull \hbox (111.63521pt too wide) in paragraph at lines 1531--1613
\teni if\tenrm (\teni pq\tenrm )[]\teni break\tenrm ; \teni caseIMN \tenrm :|

\hbox(7.5+2.86108)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni p
.etc.


Overfull \hbox (380.41496pt too wide) in paragraph at lines 1531--1613
\teni add[]ocal[]in\tenrm (\teni out[]oly; e\tenrm 0\teni ; ix; iy\tenrm ); \te
ni e\tenrm 1\tensy ^^@ \teni > outp\tenrm [\teni ABOVE\tenrm ] = \teni e\tenrm 
0\tensy ^^@ \teni > outp\tenrm [\teni ABOVE\tenrm ]; \teni break\tenrm ; \teni 
caseILI \tenrm : \teni if\tenrm (\teni p\tenrm )[]\teni break\tenrm ; \teni cas
eIRI \tenrm :|

\hbox(7.5+2.86108)x469.75499
.\teni a
.\teni d
.\teni d
.\hbox(4.8611+0.0)x3.06946, shifted 1.49998
..\seveni l
.\teni o
.etc.


Overfull \hbox (557.96397pt too wide) in paragraph at lines 1531--1613
\teni if\tenrm (\teni q\tenrm )[]\teni break\tenrm ; \teni caseIMX \tenrm : \te
ni if\tenrm (\teni pq\tenrm )[]\teni break\tenrm ; \teni caseIMM \tenrm :|

\hbox(7.5+2.86108)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni q
.etc.


Overfull \hbox (175.42041pt too wide) in paragraph at lines 1531--1613
\teni if\tenrm (\teni pq\tenrm )[]\teni break\tenrm ; \teni caseEMM \tenrm :|

\hbox(7.5+2.86108)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni p
.etc.


Overfull \hbox (160.55711pt too wide) in paragraph at lines 1531--1613
\teni if\tenrm (\teni pq\tenrm )[]\teni break\tenrm ; \teni default \tenrm :|

\hbox(7.5+2.86108)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni p
.etc.


Overfull \hbox (35.41156pt too wide) in paragraph at lines 1614--1623
\tenrm !e1->bside[CLIP]; if (e1->bundle[ABOVE][CLIP]) e0->bside[CLIP]= !e0->bsi
de[CLIP]; if (e0->bundle[ABOVE][SUBJ])|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm !
.\tenrm e
.\tenrm 1
.\tenrm -
.\discretionary
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1625         prev_
                    edge= e0->prev;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1629 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (56.23143pt too wide) in paragraph at lines 1624--1629
[]\tenrm /* Swap e0 and e1 bun-dles in the AET */ prev$[]\teni dge \tenrm = \te
ni e\tenrm 0\tensy ^^@ \teni > prev\tenrm ; \teni next[]dge \tenrm = \teni e\te
nrm 1\tensy ^^@ \teni > next\tenrm ; \teni if\tenrm (\teni next[]dge\tenrm )\te
ni next[]dge\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm S
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1630         if (e0->bstate[ABOVE] == BUNDLE_
                                               HEAD)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1660       }
               /* End of IT loop*/
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1661 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (1288.69215pt too wide) in paragraph at lines 1630--1661
[]\tenrm if (e0->bstate[ABOVE] == BUNDLE$[]\teni EAD\tenrm )[]\teni if\tenrm (!
\teni prev[]dge\tenrm )[]\teni else[]e\tenrm 0\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1663       for (edge= aet; edge; edge= next_
                                              edge)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1667 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1667 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (85.24231pt too wide) in paragraph at lines 1662--1667
[]\tenrm /* Pre-pare for next scan-beam */ for (edge= aet; edge; edge= next$[]\
teni dge\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm P
.etc.

! Misplaced alignment tab character &.
l.1668         if ((edge->top.y == yt) &
                                        & succ_edge)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1668         if ((edge->top.y == yt) &&
                                          succ_edge)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1668         if ((edge->top.y == yt) && succ_
                                               edge)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1695       }
              
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1696     }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1697   }
           /* === END OF SCANBEAM PROCESSING ===============================...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1698 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (3286.08162pt too wide) in paragraph at lines 1668--1698
[]\tenrm if ((edge->top.y == yt)  succ$[]\teni dge\tenrm )[]\teni else[]edge\te
nsy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.


Overfull \hbox (130.75256pt too wide) in paragraph at lines 1668--1698
\teni outp\tenrm [\teni ABOVE\tenrm ] = \teni NULL\tenrm ; \teni =\tensy ^^C \t
enrm === \teni ENDOFSCANBEAMPROCESSING \tenrm =================================
=|

\hbox(7.5+2.5)x469.75499
.\teni o
.\teni u
.\teni t
.\teni p
.\tenrm [
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1699   /* Generate result polygon from out_
                                             poly */
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1709 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1709 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (22.49428pt too wide) in paragraph at lines 1699--1709
[]\tenrm /* Ge-ne-rate re-sult po-ly-gon from out$[]\teni oly \tensy ^^C \teni 
=result\tensy ^^@ \teni > contour \tenrm = \teni NULL\tenrm ; \teni result\tens
y ^^@ \teni > hole \tenrm = \teni NULL\tenrm ; \teni result\tensy ^^@ \teni >|

\hbox(7.5+2.86108)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm G
.etc.


Overfull \hbox (778.5442pt too wide) in paragraph at lines 1699--1709
\teni num[]ontours \tenrm = \teni count[]ontours\tenrm (\teni out[]oly\tenrm );
 \teni if\tenrm (\teni result\tensy ^^@ \teni > num[]ontours > \tenrm 0)[]$ |

\hbox(7.5+2.86108)x469.75499
.\teni n
.\teni u
.\teni m
.\hbox(3.01389+0.0)x4.07375, shifted 1.49998
..\seveni c
.\teni o
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1711     for (poly= out_
                          poly; poly; poly= npoly)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1721 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1721 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1721 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (909.63336pt too wide) in paragraph at lines 1710--1721
[]\tenrm c= 0; for (poly= out$[]\teni oly\tenrm ; \teni poly\tenrm ; \teni poly
 \tenrm = \teni npoly\tenrm )[]$ |

\hbox(7.5+2.86108)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm c
.\tenrm =
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm 0
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1722         v= result->contour[c].num_
                                         vertices - 1;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1732       }
              
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1734     }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1735   }
          
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1744 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (540.94225pt too wide) in paragraph at lines 1722--1744
[]\tenrm v= result->contour[c].num$[]\teni ertices \tensy ^^@ \tenrm 1; \teni f
or\tenrm (\teni vtx \tenrm = \teni poly\tensy ^^@ \teni > proxy\tensy ^^@ \teni
 > v\tenrm [\teni LEFT\tenrm ]; \teni vtx\tenrm ; \teni vtx \tenrm = \teni nv\t
enrm )[]\teni c \tenrm +|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm v
.\tenrm =
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm r
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1746   reset_
               it(&it);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1746   reset_it(&
                   it);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1747   reset_lmt(&
                    lmt);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.1751 }
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1752 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1754 void gpc_
                free_tristrip(gpc_tristrip *t)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1757 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1757 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1758   for (s= 0; s < t->num_
                               strips; s++)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1762 }
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1763 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1765 void gpc_
                polygon_to_tristrip(gpc_polygon *s, gpc_tristrip *t)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1768 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1768 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1769   c.num_
               contours= 0;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1772   gpc_tristrip_clip(GPC_DIFF, s, &
                                         c, t);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.1773 }
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1774 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1776 void gpc_
                tristrip_clip(gpc_op op, gpc_polygon *subj, gpc_polygon *clip,
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1792 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1792 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (2094.2483pt too wide) in paragraph at lines 1776--1792
[]\tenrm void gpc$[]\teni ristrip[]lip\tenrm (\teni gpc[]pop; gpc[]olygon \tens
y ^^C \teni subj; gpc[]olygon \tensy ^^C \teni clip; gpc[]ristrip \tensy ^^C \t
eni result\tenrm )[]$ |

\hbox(7.5+2.86108)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm v
.\kern-0.27779
.\tenrm o
.\tenrm i
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1794   if (((subj->num_
                         contours == 0) && (clip->num_contours == 0))
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1794   if (((subj->num_contours == 0) &
                                         & (clip->num_contours == 0))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1794   if (((subj->num_contours == 0) &&
                                           (clip->num_contours == 0))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1795    || ((subj->num_contours == 0) &
                                         & ((op == GPC_INT) || (op == GPC_DI...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1795    || ((subj->num_contours == 0) &&
                                           ((op == GPC_INT) || (op == GPC_DI...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1796    || ((clip->num_contours == 0) &
                                         &  (op == GPC_INT)))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1796    || ((clip->num_contours == 0) &&
                                            (op == GPC_INT)))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1802 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (3.21739pt too wide) in paragraph at lines 1793--1802
\tenrm 0))\tensy jj\tenrm ((\teni subj\tensy ^^@ \teni > num[]ontours \tenrm ==
 0)((\teni op \tenrm == \teni GPC[]NT\tenrm )\tensy jj\tenrm (\teni op \tenrm =
= \teni GPC[]IFF\tenrm )))\tensy jj\tenrm ((\teni clip\tensy ^^@ \teni > num[]o
ntours \tenrm ==|

\hbox(7.5+2.5)x469.75499
.\tenrm 0
.\tenrm )
.\tenrm )
.\tensy j
.\tensy j
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1804   if (((op == GPC_
                         INT) || (op == GPC_DIFF))
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1805    &
           & (subj->num_contours > 0) && (clip->num_contours > 0))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1805    &&
             (subj->num_contours > 0) && (clip->num_contours > 0))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1805    && (subj->num_contours > 0) &
                                       & (clip->num_contours > 0))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1805    && (subj->num_contours > 0) &&
                                         (clip->num_contours > 0))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1807 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1809   if (subj->num_
                       contours > 0)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1810     s_heap= build_lmt(&
                              lmt, &sbtree, &sbt_entries, subj, SUBJ, op);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1810     s_heap= build_lmt(&lmt, &
                                    sbtree, &sbt_entries, subj, SUBJ, op);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1810     s_heap= build_lmt(&lmt, &sbtree, &
                                             sbt_entries, subj, SUBJ, op);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1812     c_heap= build_lmt(&
                              lmt, &sbtree, &sbt_entries, clip, CLIP, op);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1812     c_heap= build_lmt(&lmt, &
                                    sbtree, &sbt_entries, clip, CLIP, op);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1812     c_heap= build_lmt(&lmt, &sbtree, &
                                             sbt_entries, clip, CLIP, op);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1813 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (44.87852pt too wide) in paragraph at lines 1808--1813
[]\tenrm /* Bu-ild LMT */ if (subj->num$[]\teni ontours > \tenrm 0)\teni s[]eap
 \tenrm = \teni build[]mt\tenrm (\teni lmt; sbtree; sbt[]ntries; subj; SUBJ; op
\tenrm ); \teni if\tenrm (\teni clip\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm B
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1817     result->num_
                       strips= 0;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1819     reset_lmt(&
                      lmt);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.1823   }
          
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1824 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1826   MALLOC(sbt, sbt_
                         entries * sizeof(double), "sbt creation", double);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1827   build_sbt(&
                    scanbeam, sbt, sbtree);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1829   free_sbtree(&
                      sbtree);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1830 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (231.98627pt too wide) in paragraph at lines 1825--1830
[]\tenrm /* Bu-ild scan-beam ta-ble from scan-beam tree */ MAL-LOC(sbt, sbt$[]\
teni ntries \tensy ^^C \teni sizeof\tenrm (\teni double\tenrm )\teni ; \tenrm "
\teni sbtcreation\tenrm "\teni ; double\tenrm ); \teni build[]bt\tenrm (\teni s
canbeam; sbt; sbtree\tenrm ); \teni scanbeam \tenrm =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm B
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1832   if (op == GPC_
                       DIFF)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1834 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1835   local_
               min= lmt;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1836 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

 [7]
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1838   while (scanbeam < sbt_
                               entries)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1847 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1847 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (404.19353pt too wide) in paragraph at lines 1837--1847
[]\tenrm /* Pro-cess each scan-beam */ while (scan-beam < sbt$[]\teni ntries\te
nrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm P
.etc.


Overfull \hbox (26.42345pt too wide) in paragraph at lines 1848--1849
[]\tenrm /* === SCAN-BEAM BO-UN-DARY PRO-CES-SING =============================
===|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm =
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1851     if (local_
                     min)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1857           add_edge_to_aet(&
                                  aet, edge, NULL);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1858 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1858 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1858 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (606.6838pt too wide) in paragraph at lines 1850--1858
[]\tenrm /* If LMT node cor-re-spon-ding to yb exi-sts */ if (local$[]\teni in\
tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm I
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1859         local_
                     min= local_min->next;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1860       }
              
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.1861     }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1862 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1864     px= -DBL_
                    MAX;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1865 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (94.82942pt too wide) in paragraph at lines 1870--1874
[]\tenrm /* Set up bun-dle fields of first edge */ aet->bundle[ABOVE][ aet->typ
e]= (aet->top.y != yb); aet->bundle[ABOVE][!aet->type]=|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm S
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1875     for (next_
                     edge= aet->next; next_edge; next_edge= next_edge->next)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1881 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.1881 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (871.26878pt too wide) in paragraph at lines 1875--1881
[]\tenrm for (next$[]\teni dge \tenrm = \teni aet\tensy ^^@ \teni > next\tenrm 
; \teni next[]dge\tenrm ; \teni next[]dge \tenrm = \teni next[]dge\tensy ^^@ \t
eni > next\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm f
.\tenrm o
.\tenrm r
.\glue 3.33333 plus 1.66666 minus 1.11111
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1883       if (next_
                      edge->bundle[ABOVE][next_edge->type])
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1885         if (EQ(e0->xb, next_edge->xb) &
                                              & EQ(e0->dx, next_edge->dx)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1885         if (EQ(e0->xb, next_edge->xb) &&
                                                EQ(e0->dx, next_edge->dx)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1886 	 &
          & (e0->top.y != yb))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1886 	 &&
            (e0->top.y != yb))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.1899     }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1900 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (37.92003pt too wide) in paragraph at lines 1882--1900
[]\tenrm /* Bun-dle ed-ges above the scan-beam bo-un-dary if they co-in-cide */
 if (next$[]\teni dge\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni
 next[]dge\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm B
.etc.


Overfull \hbox (1662.42992pt too wide) in paragraph at lines 1882--1900
\teni type\tenrm ])[]$ |

\hbox(7.5+2.5)x469.75499
.\teni t
.\teni y
.\kern0.35878
.\teni p
.\teni e
.etc.


Overfull \hbox (74.49393pt too wide) in paragraph at lines 1904--1911
\tenrm sts[CLIP]= edge->bundle[ABOVE][CLIP] + (edge->bundle[BELOW][CLIP] << 1);
 exi-sts[SUBJ]= edge->bundle[ABOVE][SUBJ]|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm s
.\tenrm t
.\tenrm s
.\tenrm [
.\tenrm C
.etc.


Overfull \hbox (33.15924pt too wide) in paragraph at lines 1912--1917
[]\tenrm if (exi-sts[CLIP] || exi-sts[SUBJ])  /* Set bun-dle side */ edge->bsid
e[CLIP]= pa-rity[CLIP]; edge->bside[SUBJ]=|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1921         case GPC_
                        DIFF:
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1923           contributing= (exists[CLIP] &
                                              & (parity[SUBJ] || horiz[SUBJ]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1923           contributing= (exists[CLIP] &&
                                                (parity[SUBJ] || horiz[SUBJ]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1924                      || (exists[SUBJ] &
                                              & (parity[CLIP] || horiz[CLIP]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1924                      || (exists[SUBJ] &&
                                                (parity[CLIP] || horiz[CLIP]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1925                      || (exists[CLIP] &
                                              & exists[SUBJ]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1925                      || (exists[CLIP] &&
                                                exists[SUBJ]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1926                      &
                             & (parity[CLIP] == parity[SUBJ]));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1926                      &&
                               (parity[CLIP] == parity[SUBJ]));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1928            &
                   & (parity[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1928            &&
                     (parity[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1930            &
                   & (parity[SUBJ] ^ edge->bundle[ABOVE][SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1930            &&
                     (parity[SUBJ] ^ edge->bundle[ABOVE][SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1932            &
                   & (parity[SUBJ] ^ (horiz[SUBJ]!=NH));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1932            &&
                     (parity[SUBJ] ^ (horiz[SUBJ]!=NH));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1934            &
                   & (parity[SUBJ] ^ (horiz[SUBJ]!=NH) ^ edge->bundle[BELOW]...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1934            &&
                     (parity[SUBJ] ^ (horiz[SUBJ]!=NH) ^ edge->bundle[BELOW]...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1948           contributing= (exists[CLIP] &
                                              & (!parity[SUBJ] || horiz[SUBJ]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1948           contributing= (exists[CLIP] &&
                                                (!parity[SUBJ] || horiz[SUBJ]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1949                      || (exists[SUBJ] &
                                              & (!parity[CLIP] || horiz[CLIP]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1949                      || (exists[SUBJ] &&
                                                (!parity[CLIP] || horiz[CLIP]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1950                      || (exists[CLIP] &
                                              & exists[SUBJ]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1950                      || (exists[CLIP] &&
                                                exists[SUBJ]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1951                      &
                             & (parity[CLIP] == parity[SUBJ]));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1951                      &&
                               (parity[CLIP] == parity[SUBJ]));
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.1961         }
                
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1962 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (19.52654pt too wide) in paragraph at lines 1918--1962
[]\tenrm /* De-ter-mine con-tri-bu-ting sta-tus and qu-adrant oc-cu-pan-cies */
 switch (op)  case GPC$[]\teni IFF \tenrm : \teni caseGPC[]NT \tenrm :|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm D
.etc.


Overfull \hbox (220.76898pt too wide) in paragraph at lines 1918--1962
\teni contributing \tenrm = (\teni exists\tenrm [\teni CLIP\tenrm ](\teni parit
y\tenrm [\teni SUBJ\tenrm ]\tensy jj\teni horiz\tenrm [\teni SUBJ\tenrm ]))\ten
sy jj\tenrm (\teni exists\tenrm [\teni SUBJ\tenrm ](\teni parity\tenrm [\teni C
LIP\tenrm ]\tensy jj\teni horiz\tenrm [\teni CLIP\tenrm ]))\tensy jj\tenrm (\te
ni exists\tenrm [\teni CLIP\tenrm ]\teni exists\tenrm [\teni SUBJ\tenrm ](\teni
 parity\tenrm [\teni CLIP\tenrm ] ==|

\hbox(7.5+2.5)x469.75499
.\teni c
.\teni o
.\teni n
.\teni t
.\teni r
.etc.


Overfull \hbox (110.57585pt too wide) in paragraph at lines 1918--1962
\teni parity\tenrm [\teni SUBJ\tenrm ])); \teni br \tenrm = (\teni parity\tenrm
 [\teni CLIP\tenrm ])(\teni parity\tenrm [\teni SUBJ\tenrm ]); \teni bl \tenrm 
= (\teni parity\tenrm [\teni CLIP\tenrm ][]\teni dge\tensy ^^@ \teni > bundle\t
enrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])(\teni parity\tenrm [\teni SUBJ\te
nrm ][]\teni dge\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni p
.\teni a
.\teni r
.\kern0.27779
.\teni i
.etc.


Overfull \hbox (29.0004pt too wide) in paragraph at lines 1918--1962
\teni bundle\tenrm [\teni ABOVE\tenrm ][\teni SUBJ\tenrm ]); \teni tr \tenrm = 
(\teni parity\tenrm [\teni CLIP\tenrm ][]\teni horiz\tenrm [\teni CLIP\tenrm ]!
 = \teni NH\tenrm ))(\teni parity\tenrm [\teni SUBJ\tenrm ][]\teni horiz\tenrm 
[\teni SUBJ\tenrm ]! = \teni NH\tenrm )); \teni tl \tenrm =|

\hbox(8.87892+2.5)x469.75499
.\teni b
.\teni u
.\teni n
.\teni d
.\teni l
.etc.


Overfull \hbox (34.15863pt too wide) in paragraph at lines 1918--1962
\teni NH\tenrm )[]\teni dge\tensy ^^@ \teni > bundle\tenrm [\teni BELOW\tenrm ]
[\teni SUBJ\tenrm ]); \teni break\tenrm ; \teni caseGPC[]OR \tenrm : \teni cont
ributing \tenrm = \teni exists\tenrm [\teni CLIP\tenrm ]\tensy jj\teni exists\t
enrm [\teni SUBJ\tenrm ]; \teni br \tenrm =|

\hbox(7.5+2.5)x469.75499
.\teni N
.\kern1.09026
.\teni H
.\kern0.81247
.\tenrm )
.etc.


Overfull \hbox (13.21161pt too wide) in paragraph at lines 1918--1962
\tenrm (\teni parity\tenrm [\teni CLIP\tenrm ])[]\teni parity\tenrm [\teni SUBJ
\tenrm ]); \teni bl \tenrm = (\teni parity\tenrm [\teni CLIP\tenrm ][]\teni dge
\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])[]\teni
 parity\tenrm [\teni SUBJ\tenrm ][]\teni dge\tensy ^^@ \teni >|

\hbox(8.87892+2.5)x469.75499
.\tenrm (
.\teni p
.\teni a
.\teni r
.\kern0.27779
.etc.


Overfull \hbox (28.73651pt too wide) in paragraph at lines 1918--1962
\teni bundle\tenrm [\teni ABOVE\tenrm ][\teni SUBJ\tenrm ]); \teni tr \tenrm = 
(\teni parity\tenrm [\teni CLIP\tenrm ][]\teni horiz\tenrm [\teni CLIP\tenrm ]!
 = \teni NH\tenrm ))[]\teni parity\tenrm [\teni SUBJ\tenrm ][]\teni horiz\tenrm
 [\teni SUBJ\tenrm ]! = \teni NH\tenrm )); \teni tl \tenrm =|

\hbox(8.87892+2.5)x469.75499
.\teni b
.\teni u
.\teni n
.\teni d
.\teni l
.etc.


Overfull \hbox (525.30437pt too wide) in paragraph at lines 1918--1962
\teni NH\tenrm )[]\teni dge\tensy ^^@ \teni > bundle\tenrm [\teni BELOW\tenrm ]
[\teni SUBJ\tenrm ]); \teni break\tenrm ; \teni caseGPC[]NION \tenrm : \teni co
ntributing \tenrm = (\teni exists\tenrm [\teni CLIP\tenrm ](!\teni parity\tenrm
 [\teni SUBJ\tenrm ]\tensy jj\teni horiz\tenrm [\teni SUBJ\tenrm ]))\tensy jj\t
enrm (\teni exists\tenrm [\teni SUBJ\tenrm ](!\teni parity\tenrm [\teni CLIP\te
nrm ]\tensy jj\teni horiz\tenrm [\teni CLIP\tenrm ]))\tensy jj\tenrm (\teni exi
sts\tenrm [\teni CLIP\tenrm ]\teni exists\tenrm [\teni SUBJ\tenrm ](\teni parit
y\tenrm [\teni CLIP\tenrm ] ==|

\hbox(7.5+2.5)x469.75499
.\teni N
.\kern1.09026
.\teni H
.\kern0.81247
.\tenrm )
.etc.


Overfull \hbox (121.687pt too wide) in paragraph at lines 1918--1962
\teni parity\tenrm [\teni SUBJ\tenrm ])); \teni br \tenrm = (\teni parity\tenrm
 [\teni CLIP\tenrm ])\tensy jj\tenrm (\teni parity\tenrm [\teni SUBJ\tenrm ]); 
\teni bl \tenrm = (\teni parity\tenrm [\teni CLIP\tenrm ][]\teni dge\tensy ^^@ 
\teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])\tensy jj\tenrm (\
teni parity\tenrm [\teni SUBJ\tenrm ][]\teni dge\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni p
.\teni a
.\teni r
.\kern0.27779
.\teni i
.etc.


Overfull \hbox (45.40457pt too wide) in paragraph at lines 1918--1962
\teni NH\tenrm )); \teni tl \tenrm = (\teni parity\tenrm [\teni CLIP\tenrm ][]\
teni horiz\tenrm [\teni CLIP\tenrm ]! = \teni NH\tenrm )[]\teni dge\tensy ^^@ \
teni > bundle\tenrm [\teni BELOW\tenrm ][\teni CLIP\tenrm ])\tensy jj\tenrm (\t
eni parity\tenrm [\teni SUBJ\tenrm ][]\teni horiz\tenrm [\teni SUBJ\tenrm ]! =|


\hbox(8.87892+2.5)x469.75499
.\teni N
.\kern1.09026
.\teni H
.\kern0.81247
.\tenrm )
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   ^
l.1964         parity[CLIP]^
                            = edge->bundle[ABOVE][CLIP];
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1966 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (73.52554pt too wide) in paragraph at lines 1963--1966
[]\tenrm /* Update pa-rity */ parity[CLIP]$[]\teni edge\tensy ^^@ \teni > bundl
e\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ]; \teni parity\tenrm [\teni SUBJ
\tenrm ][]\teni edge\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni 
SUBJ\tenrm ];$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm U
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1970             next_
                        h_state[horiz[CLIP]]
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Double subscript.
l.1970             next_h_
                          state[horiz[CLIP]]
I treat `x_1_2' essentially like `x_1{}_2'.

! Double subscript.
l.1974             next_h_
                          state[horiz[SUBJ]]
I treat `x_1_2' essentially like `x_1{}_2'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.1976 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.1986             new_
                       tristrip(&tlist, edge, xb, yb);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.1986             new_tristrip(&
                                 tlist, edge, xb, yb);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2011               new_tristrip(&
                                   tlist, cf, cf->xb, yb);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2017             new_tristrip(&
                                 tlist, edge, xb, yb);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2026               new_tristrip(&
                                   tlist, cf, cf->xb, yb);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2046             new_tristrip(&
                                 tlist, edge, xb, yb);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.2082           }
                   /* End of switch */
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.2083         }
                 /* End of contributing conditional */
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.2084       }
               /* End of edge exists conditional */
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.2085     }
             /* End of AET loop */
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.2086 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (40.12244pt too wide) in paragraph at lines 1983--2086
[]\tenrm switch (vclass)  case EMN: new$[]\teni ristrip\tenrm (\teni tlist; edg
e; xb; yb\tenrm ); \teni cf \tenrm = \teni edge\tenrm ; \teni break\tenrm ; \te
ni caseERI \tenrm : \teni edge\tensy ^^@ \teni > outp\tenrm [\teni ABOVE\tenrm 
] =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm w
.\tenrm i
.\tenrm t
.etc.


Overfull \hbox (40.45612pt too wide) in paragraph at lines 1983--2086
\teni cf\tensy ^^@ \teni > outp\tenrm [\teni ABOVE\tenrm ]; \teni if\tenrm (\te
ni xb\tenrm ! = \teni cf\tensy ^^@ \teni > xb\tenrm )\teni VERTEX\tenrm (\teni 
edge; ABOVE; RIGHT; xb; yb\tenrm ); \teni cf \tenrm = \teni NULL\tenrm ; \teni 
break\tenrm ; \teni caseELI \tenrm :|

\hbox(7.5+2.5)x469.75499
.\teni c
.\teni f
.\kern1.0764
.\tensy ^^@
.\glue(\thickmuskip) 2.77771 plus 2.77771
.etc.


Overfull \hbox (217.41635pt too wide) in paragraph at lines 1983--2086
\teni NULL\tenrm ; \teni break\tenrm ; \teni caseIMN \tenrm : \teni if\tenrm (\
teni cft \tenrm == \teni LED\tenrm )[]\teni edge\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni N
.\kern1.09026
.\teni U
.\kern1.09026
.\teni L
.etc.


Overfull \hbox (129.8925pt too wide) in paragraph at lines 1983--2086
\teni outp\tenrm [\teni ABOVE\tenrm ] = \teni cf\tensy ^^@ \teni > outp\tenrm [
\teni ABOVE\tenrm ]; \teni VERTEX\tenrm (\teni edge; ABOVE; RIGHT; xb; yb\tenrm
 ); \teni break\tenrm ; \teni caseILI \tenrm : \teni new[]ristrip\tenrm (\teni 
tlist; edge; xb; yb\tenrm ); \teni cf \tenrm =|

\hbox(7.5+2.5)x469.75499
.\teni o
.\teni u
.\teni t
.\teni p
.\tenrm [
.etc.


Overfull \hbox (441.78583pt too wide) in paragraph at lines 1983--2086
\teni edge\tenrm ; \teni cft \tenrm = \teni ILI\tenrm ; \teni break\tenrm ; \te
ni caseIRI \tenrm : \teni if\tenrm (\teni cft \tenrm == \teni LED\tenrm )[]\ten
i VERTEX\tenrm (\teni edge; BELOW; RIGHT; xb; yb\tenrm ); \teni edge\tensy ^^@ 
\teni >|

\hbox(7.5+2.5)x469.75499
.\teni e
.\teni d
.\teni g
.\kern0.35878
.\teni e
.etc.


Overfull \hbox (26.1953pt too wide) in paragraph at lines 1983--2086
\teni outp\tenrm [\teni ABOVE\tenrm ] = \teni NULL\tenrm ; \teni break\tenrm ; 
\teni caseIMX \tenrm : \teni VERTEX\tenrm (\teni edge; BELOW; LEFT; xb; yb\tenr
m ); \teni edge\tensy ^^@ \teni > outp\tenrm [\teni ABOVE\tenrm ] =|

\hbox(7.5+2.5)x469.75499
.\teni o
.\teni u
.\teni t
.\teni p
.\tenrm [
.etc.


Overfull \hbox (7.03851pt too wide) in paragraph at lines 1983--2086
\teni NULL\tenrm ; \teni cft \tenrm = \teni IMX\tenrm ; \teni break\tenrm ; \te
ni caseIMM \tenrm : \teni VERTEX\tenrm (\teni edge; BELOW; LEFT; xb; yb\tenrm )
; \teni edge\tensy ^^@ \teni > outp\tenrm [\teni ABOVE\tenrm ] =|

\hbox(7.5+2.5)x469.75499
.\teni N
.\kern1.09026
.\teni U
.\kern1.09026
.\teni L
.etc.


Overfull \hbox (29.14343pt too wide) in paragraph at lines 1983--2086
\teni cf\tensy ^^@ \teni > outp\tenrm [\teni ABOVE\tenrm ]; \teni if\tenrm (\te
ni xb\tenrm ! = \teni cf\tensy ^^@ \teni > xb\tenrm )\teni VERTEX\tenrm (\teni 
cf; ABOVE; RIGHT; xb; yb\tenrm ); \teni cf \tenrm = \teni edge\tenrm ; \teni br
eak\tenrm ; \teni caseEMM \tenrm :|

\hbox(7.5+2.5)x469.75499
.\teni c
.\teni f
.\kern1.0764
.\tensy ^^@
.\glue(\thickmuskip) 2.77771 plus 2.77771
.etc.


Overfull \hbox (32.58786pt too wide) in paragraph at lines 1983--2086
\teni VERTEX\tenrm (\teni edge; BELOW; RIGHT; xb; yb\tenrm ); \teni edge\tensy 
^^@ \teni > outp\tenrm [\teni ABOVE\tenrm ] = \teni NULL\tenrm ; \teni new[]ris
trip\tenrm (\teni tlist; edge; xb; yb\tenrm ); \teni cf \tenrm =|

\hbox(7.5+2.5)x469.75499
.\teni V
.\kern2.22223
.\teni E
.\kern0.57637
.\teni R
.etc.


Overfull \hbox (45.26274pt too wide) in paragraph at lines 1983--2086
\teni edge\tenrm ; \teni break\tenrm ; \teni caseLED \tenrm : \teni if\tenrm (\
teni edge\tensy ^^@ \teni > bot:y \tenrm == \teni yb\tenrm )\teni VERTEX\tenrm 
(\teni edge; BELOW; LEFT; xb; yb\tenrm ); \teni edge\tensy ^^@ \teni > outp\ten
rm [\teni ABOVE\tenrm ] =|

\hbox(7.5+2.5)x469.75499
.\teni e
.\teni d
.\teni g
.\kern0.35878
.\teni e
.etc.


Overfull \hbox (915.96559pt too wide) in paragraph at lines 1983--2086
\teni outp\tenrm [\teni ABOVE\tenrm ]; \teni if\tenrm (\teni cft \tenrm == \ten
i LED\tenrm )[]\teni else[]cf \tenrm =|

\hbox(7.5+2.5)x469.75499
.\teni o
.\teni u
.\teni t
.\teni p
.\tenrm [
.etc.


Overfull \hbox (41.57906pt too wide) in paragraph at lines 1983--2086
\teni NULL\tenrm ; \teni break\tenrm ; \teni default \tenrm : \teni break\tenrm
 ; \teni = \tensy ^^C \teni Endofswitch \tensy ^^C \teni == \tensy ^^C \teni En
dofcontributingconditional \tensy ^^C \teni == \tensy ^^C \teni Endofedgeexists
conditional \tensy ^^C|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\teni N
.\kern1.09026
.\teni U
.\kern1.09026
.\teni L
.etc.

 [8]
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.2092         prev_
                    edge= edge->prev;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.2100 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (33.58437pt too wide) in paragraph at lines 2087--2100
\tenrm edge->next)  if (edge->top.y == yb)  prev$[]\teni dge \tenrm = \teni edg
e\tensy ^^@ \teni > prev\tenrm ; \teni next[]dge \tenrm = \teni edge\tensy ^^@ 
\teni > next\tenrm ; \teni if\tenrm (\teni prev[]dge\tenrm )\teni prev[]dge\ten
sy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm e
.\tenrm d
.\tenrm g
.\tenrm e
.\tenrm -
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.2102         if ((edge->bstate[BELOW] == BUNDLE_
                                                  HEAD) && prev_edge)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.2102 ... ((edge->bstate[BELOW] == BUNDLE_HEAD) &
                                                  & prev_edge)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2102 ...((edge->bstate[BELOW] == BUNDLE_HEAD) &&
                                                   prev_edge)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.2113       }
              
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.2121     }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.2122 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (1549.1306pt too wide) in paragraph at lines 2101--2122
\tenrm BUNDLE$[]\teni EAD\tenrm )\teni prev[]dge\tenrm )[]\teni else[]$ |

\hbox(7.5+2.5)x469.75499
.\tenrm B
.\tenrm U
.\tenrm N
.\tenrm D
.\tenrm L
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.2123     if (scanbeam < sbt_
                              entries)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.2126 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.2126 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (146.47717pt too wide) in paragraph at lines 2123--2126
[]\tenrm if (scan-beam < sbt$[]\teni ntries\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.2127       build_
                   intersection_table(&it, aet, dy);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.2127       build_intersection_table(&
                                       it, aet, dy);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.2128 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.2137          &
                 & (e1->bundle[ABOVE][CLIP] || e1->bundle[ABOVE][SUBJ]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2137          &&
                   (e1->bundle[ABOVE][CLIP] || e1->bundle[ABOVE][SUBJ]))
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


Overfull \hbox (77.68942pt too wide) in paragraph at lines 2135--2143
[]\tenrm /* Only ge-ne-rate out-put for con-tri-bu-ting in-ter-sec-tions */ if 
((e0->bundle[ABOVE][CLIP] || e0->bundle[ABOVE][SUBJ])|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm O
.etc.


Overfull \hbox (6.35382pt too wide) in paragraph at lines 2135--2143
\tenrm (e1->bundle[ABOVE][CLIP] || e1->bundle[ABOVE][SUBJ]))  p= e0->outp[ABOVE
]; q= e1->outp[ABOVE];|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm (
.\tenrm e
.\tenrm 1
.\tenrm -
.\discretionary
.etc.

! Misplaced alignment tab character &.
l.2144 ...   in[CLIP]= ( e0->bundle[ABOVE][CLIP] &
                                                  & !e0->bside[CLIP])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2144 ...  in[CLIP]= ( e0->bundle[ABOVE][CLIP] &&
                                                   !e0->bside[CLIP])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2145 ...          || ( e1->bundle[ABOVE][CLIP] &
                                                  &  e1->bside[CLIP])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2145 ...         || ( e1->bundle[ABOVE][CLIP] &&
                                                    e1->bside[CLIP])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2146 ...          || (!e0->bundle[ABOVE][CLIP] &
                                                  & !e1->bundle[ABOVE][CLIP]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2146 ...         || (!e0->bundle[ABOVE][CLIP] &&
                                                   !e1->bundle[ABOVE][CLIP]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2147                      &
                             & e0->bside[CLIP] && e1->bside[CLIP]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2147                      &&
                               e0->bside[CLIP] && e1->bside[CLIP]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2147                      && e0->bside[CLIP] &
                                                & e1->bside[CLIP]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2147                      && e0->bside[CLIP] &&
                                                  e1->bside[CLIP]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2148 ...   in[SUBJ]= ( e0->bundle[ABOVE][SUBJ] &
                                                  & !e0->bside[SUBJ])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2148 ...  in[SUBJ]= ( e0->bundle[ABOVE][SUBJ] &&
                                                   !e0->bside[SUBJ])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2149 ...          || ( e1->bundle[ABOVE][SUBJ] &
                                                  &  e1->bside[SUBJ])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2149 ...         || ( e1->bundle[ABOVE][SUBJ] &&
                                                    e1->bside[SUBJ])
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2150 ...          || (!e0->bundle[ABOVE][SUBJ] &
                                                  & !e1->bundle[ABOVE][SUBJ]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2150 ...         || (!e0->bundle[ABOVE][SUBJ] &&
                                                   !e1->bundle[ABOVE][SUBJ]
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2151                      &
                             & e0->bside[SUBJ] && e1->bside[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2151                      &&
                               e0->bside[SUBJ] && e1->bside[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2151                      && e0->bside[SUBJ] &
                                                & e1->bside[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2151                      && e0->bside[SUBJ] &&
                                                  e1->bside[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


Overfull \hbox (29.24037pt too wide) in paragraph at lines 2144--2152
[]\tenrm in[CLIP]= ( e0->bundle[ABOVE][CLIP]  !e0->bside[CLIP]) || ( e1->bundle
[ABOVE][CLIP]  e1->bside[CLIP])|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm n
.\tenrm [
.\tenrm C
.etc.


Overfull \hbox (6.18375pt too wide) in paragraph at lines 2144--2152
\tenrm || (!e0->bundle[ABOVE][CLIP]  !e1->bundle[ABOVE][CLIP]  e0->bside[CLIP] 
 e1->bside[CLIP]); in[SUBJ]=|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm |
.\tenrm |
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.\tenrm !
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.2156           case GPC_
                          DIFF:
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.2159              &
                     & (in[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2159              &&
                       (in[SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2161              &
                     & (in[SUBJ] ^ e1->bundle[ABOVE][SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2161              &&
                       (in[SUBJ] ^ e1->bundle[ABOVE][SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2163              &
                     & (in[SUBJ] ^ e0->bundle[ABOVE][SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2163              &&
                       (in[SUBJ] ^ e0->bundle[ABOVE][SUBJ]);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2165              &
                     & (in[SUBJ] ^ e1->bundle[ABOVE][SUBJ] ^ e0->bundle[ABOV...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2165              &&
                       (in[SUBJ] ^ e1->bundle[ABOVE][SUBJ] ^ e0->bundle[ABOV...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.2187           }
                  
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.2188 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (65.6299pt too wide) in paragraph at lines 2153--2188
[]\tenrm /* De-ter-mine qu-adrant oc-cu-pan-cies */ switch (op)  case GPC$[]\te
ni IFF \tenrm : \teni caseGPC[]NT \tenrm : \teni tr \tenrm = (\teni in\tenrm [\
teni CLIP\tenrm ])(\teni in\tenrm [\teni SUBJ\tenrm ]); \teni tl \tenrm =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm D
.etc.


Overfull \hbox (10.76352pt too wide) in paragraph at lines 2153--2188
\tenrm (\teni in\tenrm [\teni CLIP\tenrm ][]1\tensy ^^@ \teni > bundle\tenrm [\
teni ABOVE\tenrm ][\teni CLIP\tenrm ])(\teni in\tenrm [\teni SUBJ\tenrm ][]1\te
nsy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni SUBJ\tenrm ]); \teni br
 \tenrm = (\teni in\tenrm [\teni CLIP\tenrm ][]0\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\tenrm (
.\teni i
.\teni n
.\tenrm [
.\teni C
.etc.


Overfull \hbox (69.94044pt too wide) in paragraph at lines 2153--2188
\teni bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])(\teni in\tenrm [\te
ni SUBJ\tenrm ][]0\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni SU
BJ\tenrm ]); \teni bl \tenrm = (\teni in\tenrm [\teni CLIP\tenrm ][]1\tensy ^^@
 \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ][]0\tensy ^^@ \ten
i >|

\hbox(7.5+2.5)x469.75499
.\teni b
.\teni u
.\teni n
.\teni d
.\teni l
.etc.


Overfull \hbox (76.01811pt too wide) in paragraph at lines 2153--2188
\teni bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])(\teni in\tenrm [\te
ni SUBJ\tenrm ][]1\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni SU
BJ\tenrm ][]0\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni SUBJ\te
nrm ]); \teni break\tenrm ; \teni caseGPC[]OR \tenrm :|

\hbox(7.5+2.5)x469.75499
.\teni b
.\teni u
.\teni n
.\teni d
.\teni l
.etc.


Overfull \hbox (82.02347pt too wide) in paragraph at lines 2153--2188
\teni tr \tenrm = (\teni in\tenrm [\teni CLIP\tenrm ])[]\teni in\tenrm [\teni S
UBJ\tenrm ]); \teni tl \tenrm = (\teni in\tenrm [\teni CLIP\tenrm ][]1\tensy ^^
@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])[]\teni in\tenrm
 [\teni SUBJ\tenrm ][]1\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\te
ni SUBJ\tenrm ]); \teni br \tenrm =|

\hbox(8.87892+2.5)x469.75499
.\teni t
.\teni r
.\kern0.27779
.\glue(\thickmuskip) 2.77771 plus 2.77771
.\tenrm =
.etc.


Overfull \hbox (8.89084pt too wide) in paragraph at lines 2153--2188
\tenrm (\teni in\tenrm [\teni CLIP\tenrm ][]0\tensy ^^@ \teni > bundle\tenrm [\
teni ABOVE\tenrm ][\teni CLIP\tenrm ])[]\teni in\tenrm [\teni SUBJ\tenrm ][]0\t
ensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni SUBJ\tenrm ]); \teni b
l \tenrm = (\teni in\tenrm [\teni CLIP\tenrm ][]1\tensy ^^@ \teni >|

\hbox(8.87892+2.5)x469.75499
.\tenrm (
.\teni i
.\teni n
.\tenrm [
.\teni C
.etc.


Overfull \hbox (134.66133pt too wide) in paragraph at lines 2153--2188
\teni bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])\tensy jj\tenrm (\te
ni in\tenrm [\teni SUBJ\tenrm ][]1\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\
tenrm ][\teni SUBJ\tenrm ]); \teni br \tenrm = (\teni in\tenrm [\teni CLIP\tenr
m ][]0\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\tenrm ][\teni CLIP\tenrm ])\
tensy jj\tenrm (\teni in\tenrm [\teni SUBJ\tenrm ][]0\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni b
.\teni u
.\teni n
.\teni d
.\teni l
.etc.


Overfull \hbox (75.49602pt too wide) in paragraph at lines 2153--2188
\teni bundle\tenrm [\teni ABOVE\tenrm ][\teni SUBJ\tenrm ]); \teni bl \tenrm = 
(\teni in\tenrm [\teni CLIP\tenrm ][]1\tensy ^^@ \teni > bundle\tenrm [\teni AB
OVE\tenrm ][\teni CLIP\tenrm ][]0\tensy ^^@ \teni > bundle\tenrm [\teni ABOVE\t
enrm ][\teni CLIP\tenrm ])\tensy jj\tenrm (\teni in\tenrm [\teni SUBJ\tenrm ][]
1\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni b
.\teni u
.\teni n
.\teni d
.\teni l
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.2194             new_
                       tristrip(&tlist, e1, ix, iy);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.2194             new_tristrip(&
                                 tlist, e1, ix, iy);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2218             if (p &
                          & q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2218             if (p &&
                            q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2230             new_tristrip(&
                                 tlist, prev_edge, px, iy);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2233             new_tristrip(&
                                 tlist, e0, ix, iy);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2258             if (p &
                          & q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2258             if (p &&
                            q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2266               new_tristrip(&
                                   tlist, prev_edge, px, iy);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2274             if (p &
                          & q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2274             if (p &&
                            q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2280               new_tristrip(&
                                   tlist, prev_edge, px, iy);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2285               new_tristrip(&
                                   tlist, e0, ix, iy);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2291             if (p &
                          & q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2291             if (p &&
                            q)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2294               new_tristrip(&
                                   tlist, e1, ix, iy);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.2300           }
                   /* End of switch */
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.2301 	}
          /* End of contributing intersection conditional */
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.2302 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (70.21461pt too wide) in paragraph at lines 2191--2302
[]\tenrm switch (vclass)  case EMN: new$[]\teni ristrip\tenrm (\teni tlist; e\t
enrm 1\teni ; ix; iy\tenrm ); \teni e\tenrm 0\tensy ^^@ \teni > outp\tenrm [\te
ni ABOVE\tenrm ] = \teni e\tenrm 1\tensy ^^@ \teni > outp\tenrm [\teni ABOVE\te
nrm ]; \teni break\tenrm ; \teni caseERI \tenrm :|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm s
.\tenrm w
.\tenrm i
.\tenrm t
.etc.


Overfull \hbox (536.62776pt too wide) in paragraph at lines 2191--2302
\teni if\tenrm (\teni p\tenrm )[]\teni break\tenrm ; \teni caseELI \tenrm :|

\hbox(7.5+2.5)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni p
.etc.


Overfull \hbox (549.17294pt too wide) in paragraph at lines 2191--2302
\teni if\tenrm (\teni q\tenrm )[]\teni break\tenrm ; \teni caseEMX \tenrm :|

\hbox(7.5+2.5)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni q
.etc.


Overfull \hbox (95.41054pt too wide) in paragraph at lines 2191--2302
\teni if\tenrm (\teni pq\tenrm )[]\teni break\tenrm ; \teni caseIMN \tenrm :|

\hbox(7.5+2.5)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni p
.etc.


Overfull \hbox (482.75523pt too wide) in paragraph at lines 2191--2302
\teni P[]DGE\tenrm (\teni prev[]dge; e\tenrm 0\teni ; ABOVE; px; iy\tenrm ); \t
eni VERTEX\tenrm (\teni prev[]dge; ABOVE; LEFT; px; iy\tenrm ); \teni N[]DGE\te
nrm (\teni next[]dge; e\tenrm 1\teni ; ABOVE; nx; iy\tenrm ); \teni VERTEX\tenr
m (\teni next[]dge; ABOVE; RIGHT; nx; iy\tenrm ); \teni new[]ristrip\tenrm (\te
ni tlist; prev[]dge; px; iy\tenrm ); \teni e\tenrm 1\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni P
.\hbox(4.78334+0.0)x6.75557, shifted 1.49998
..\seveni E
.\teni D
.\kern0.27779
.\teni G
.etc.


Overfull \hbox (98.13641pt too wide) in paragraph at lines 2191--2302
\teni outp\tenrm [\teni ABOVE\tenrm ] = \teni prev[]dge\tensy ^^@ \teni > outp\
tenrm [\teni ABOVE\tenrm ]; \teni VERTEX\tenrm (\teni e\tenrm 1\teni ; ABOVE; R
IGHT; ix; iy\tenrm ); \teni new[]ristrip\tenrm (\teni tlist; e\tenrm 0\teni ; i
x; iy\tenrm ); \teni next[]dge\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499
.\teni o
.\teni u
.\teni t
.\teni p
.\tenrm [
.etc.


Overfull \hbox (539.59312pt too wide) in paragraph at lines 2191--2302
\teni if\tenrm (\teni p\tenrm )[]\teni break\tenrm ; \teni caseIRI \tenrm :|

\hbox(7.5+2.5)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni p
.etc.


Overfull \hbox (541.51662pt too wide) in paragraph at lines 2191--2302
\teni if\tenrm (\teni q\tenrm )[]\teni break\tenrm ; \teni caseIMX \tenrm :|

\hbox(7.5+2.5)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni q
.etc.


Overfull \hbox (1683.17401pt too wide) in paragraph at lines 2191--2302
\teni if\tenrm (\teni pq\tenrm )[]\teni break\tenrm ; \teni caseIMM \tenrm :|

\hbox(7.5+2.5)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni p
.etc.


Overfull \hbox (1911.1068pt too wide) in paragraph at lines 2191--2302
\teni if\tenrm (\teni pq\tenrm )[]\teni break\tenrm ; \teni caseEMM \tenrm :|

\hbox(7.5+2.5)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni p
.etc.


Overfull \hbox (128.65755pt too wide) in paragraph at lines 2191--2302
\teni if\tenrm (\teni pq\tenrm )[]\teni break\tenrm ; \teni default \tenrm :|

\hbox(7.5+2.5)x469.75499
.\teni i
.\teni f
.\kern1.0764
.\tenrm (
.\teni p
.etc.


Overfull \hbox (35.41156pt too wide) in paragraph at lines 2303--2312
\tenrm !e1->bside[CLIP]; if (e1->bundle[ABOVE][CLIP]) e0->bside[CLIP]= !e0->bsi
de[CLIP]; if (e0->bundle[ABOVE][SUBJ])|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm !
.\tenrm e
.\tenrm 1
.\tenrm -
.\discretionary
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.2314         prev_
                    edge= e0->prev;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.2318 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.2319         if (e0->bstate[ABOVE] == BUNDLE_
                                               HEAD)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.2349       }
               /* End of IT loop*/
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.2350 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (1424.35333pt too wide) in paragraph at lines 2319--2350
[]\tenrm if (e0->bstate[ABOVE] == BUNDLE$[]\teni EAD\tenrm )[]\teni if\tenrm (!
\teni prev[]dge\tenrm )[]\teni else[]e\tenrm 0\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.2352       for (edge= aet; edge; edge= next_
                                              edge)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.2356 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.2356 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (85.24231pt too wide) in paragraph at lines 2351--2356
[]\tenrm /* Pre-pare for next scan-beam */ for (edge= aet; edge; edge= next$[]\
teni dge\tenrm )[]$ |

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm P
.etc.

! Misplaced alignment tab character &.
l.2357         if ((edge->top.y == yt) &
                                        & succ_edge)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2357         if ((edge->top.y == yt) &&
                                          succ_edge)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.2357         if ((edge->top.y == yt) && succ_
                                               edge)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.2384       }
              
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.2385     }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.2386   }
           /* === END OF SCANBEAM PROCESSING ===============================...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.2387 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (3286.08162pt too wide) in paragraph at lines 2357--2387
[]\tenrm if ((edge->top.y == yt)  succ$[]\teni dge\tenrm )[]\teni else[]edge\te
nsy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm i
.\tenrm f
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm (
.etc.


Overfull \hbox (130.75256pt too wide) in paragraph at lines 2357--2387
\teni outp\tenrm [\teni ABOVE\tenrm ] = \teni NULL\tenrm ; \teni =\tensy ^^C \t
enrm === \teni ENDOFSCANBEAMPROCESSING \tenrm =================================
=|

\hbox(7.5+2.5)x469.75499
.\teni o
.\teni u
.\teni t
.\teni p
.\tenrm [
.etc.

 [9]
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.2390   result->num_
                     strips= count_tristrips(tlist);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.2395 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
<to be read again> 
                   $
<to be read again> 
                   \par 
l.2395 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (55.77577pt too wide) in paragraph at lines 2388--2395
[]\tenrm /* Ge-ne-rate re-sult tri-strip from tlist */ result->strip= NULL; res
ult->num$[]\teni trips \tenrm = \teni count[]ristrips\tenrm (\teni tlist\tenrm 
); \teni if\tenrm (\teni result\tensy ^^@ \teni >|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\hbox(0.0+0.0)x20.0
.\tenrm /
.\tenrm *
.\glue 3.33333 plus 1.66666 minus 1.11111
.\tenrm G
.etc.


Overfull \hbox (89.98349pt too wide) in paragraph at lines 2388--2395
\teni num[]trips > \tenrm 0)[]$ |

\hbox(7.5+2.5)x469.75499
.\teni n
.\teni u
.\teni m
.\hbox(3.01389+0.0)x4.27432, shifted 1.49998
..\seveni s
.\teni t
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.2404         result->strip[s].num_
                                    vertices= tn->active;
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.2440       }
              
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.2456     }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Extra }, or forgotten $.
l.2457   }
          
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.2458 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (56.355pt too wide) in paragraph at lines 2401--2458
\teni tn\tensy ^^@ \teni > active\tenrm ; \teni MALLOC\tenrm (\teni result\tens
y ^^@ \teni > strip\tenrm [\teni s\tenrm ]\teni :vertex; tn\tensy ^^@ \teni > a
ctive \tensy ^^C \teni sizeof\tenrm (\teni gpc[]ertex\tenrm )\teni ; \tenrm "\t
eni tristripcreation\tenrm "\teni ; gpc[]ertex\tenrm ); \teni v \tenrm =|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\teni t
.\teni n
.\tensy ^^@
.\glue(\thickmuskip) 2.77771 plus 2.77771
.\teni >
.etc.


Overfull \hbox (1315.70338pt too wide) in paragraph at lines 2401--2458
\tenrm 0; \teni if\tenrm (\teni INVERT[]RISTRIPS\tenrm )[]\teni else[]while\ten
rm (\teni lt\tensy jj\teni rt\tenrm )[]\teni s \tenrm +|

\hbox(7.5+2.5)x469.75499, glue set - 1.0
.\tenrm 0
.\tenrm ;
.\glue(\thinmuskip) 1.66663
.\teni i
.\teni f
.etc.


Overfull \hbox (388.6805pt too wide) in paragraph at lines 2401--2458
\tenrm +; \teni else[]FREE\tenrm (\teni tn\tenrm );$ |

\hbox(7.5+2.5)x469.75499
.\tenrm +
.\tenrm ;
.\glue(\thinmuskip) 1.66663
.\teni e
.\teni l
.etc.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
l.2460   reset_
               it(&it);
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.2460   reset_it(&
                   it);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.2461   reset_lmt(&
                    lmt);
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten $.
l.2465 }
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   \par 
l.2466 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

)
! Missing $ inserted.
<inserted text> 
                $
<to be read again> 
                   _
<*> gpc.c gpc_
              mexfile.c -O -output PolygonClip
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Emergency stop.
<*> gpc.c gpc_mexfile.c -O -output PolygonClip
                                              
*** (job aborted, no legal \end found)

Output written on gpc.dvi (9 pages, 109624 bytes).
